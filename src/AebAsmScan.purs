module Aeb.Asm.Scan(erlps__string__1, erlps__string__2,
                    erlps__token__2, erlps__token__3, erlps__tokens__2,
                    erlps__tokens__3, erlps__format_error__1,
                    erlps__scan__1) where
{-
This file has been autogenerated
DO NOT EDIT - Your changes WILL be overwritten
Use this code at your own risk - the authors are just a mischievous raccoon and a haskell devote
Erlscripten v0.2.0
-}

import Prelude
import Data.BigInt as DBI
import Data.Array as DA
import Data.Maybe as DM
import Data.Map as Map
import Data.Tuple as DT
import Erlang.Builtins as BIF
import Erlang.Binary as BIN
import Erlang.Helpers
import Erlang.Exception as EXC
import Erlang.Type
import Partial.Unsafe (unsafePartial)


erlps__parse_hex__1 :: ErlangFun
erlps__parse_hex__1 [(ErlangCons (ErlangInt num_0) (ErlangCons (ErlangInt num_1) chars_2))]
  | (ErlangInt num_0) == (toErl 48)
  , (ErlangInt num_1) == (toErl 120) =
  let arg_4 = toErl 16
  in BIF.erlang__list_to_integer__2 [chars_2, arg_4]
erlps__parse_hex__1 [arg_5] = EXC.function_clause unit
erlps__parse_hex__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__parse_int__1 :: ErlangFun
erlps__parse_int__1 [chars_0] =
  BIF.erlang__list_to_integer__1 [chars_0]
erlps__parse_int__1 [arg_2] = EXC.function_clause unit
erlps__parse_int__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__parse_hash__1 :: ErlangFun
erlps__parse_hash__1 [(ErlangCons (ErlangInt num_0) chars_1)]
  | (ErlangInt num_0) == (toErl 35) =
  let    arg_3 = toErl 16
  in let n_4 = BIF.erlang__list_to_integer__2 [chars_1, arg_3]
  in ErlangBinary (BIN.fromInt n_4 (toErl 256) 1 BIN.Big)
erlps__parse_hash__1 [arg_6] = EXC.function_clause unit
erlps__parse_hash__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__scan__1 :: ErlangFun
erlps__scan__1 [s_0] = erlps__string__1 [s_0]
erlps__scan__1 [arg_2] = EXC.function_clause unit
erlps__scan__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__format_error__1 :: ErlangFun
erlps__format_error__1 [(ErlangTuple [(ErlangAtom "illegal"),
                                      s_0])]
  =
  let    head_1 = toErl "illegal characters "
  in let
    head_3 =
      BIF.do_remote_fun_call "Io.Lib" "erlps__write_string__1" [s_0]
  in ErlangCons head_1 (ErlangCons head_3 ErlangEmptyList)
erlps__format_error__1 [(ErlangTuple [(ErlangAtom "user"), s_0])]
  =
  s_0
erlps__format_error__1 [arg_1] = EXC.function_clause unit
erlps__format_error__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__string__1 :: ErlangFun
erlps__string__1 [string_0] =
  let arg_2 = toErl 1
  in erlps__string__2 [string_0, arg_2]
erlps__string__1 [arg_3] = EXC.function_clause unit
erlps__string__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__string__2 :: ErlangFun
erlps__string__2 [string_0, line_1] =
  erlps__string__4 [string_0, line_1, string_0, ErlangEmptyList]
erlps__string__2 [arg_6, arg_7] = EXC.function_clause unit
erlps__string__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__string__4 :: ErlangFun
erlps__string__4 [(ErlangEmptyList), l_0, (ErlangEmptyList),
                  ts_1]
  =
  let tup_el_3 = erlps__yyrev__1 [ts_1]
  in ErlangTuple [ErlangAtom "ok", tup_el_3, l_0]
erlps__string__4 [ics0_0, l0_1, tcs_2, ts_3] =
  let    arg_5 = erlps__yystate__0 []
  in let arg_8 = toErl 0
  in let arg_10 = toErl 0
  in let
    case_4 =
      erlps__yystate__6
        [arg_5, ics0_0, l0_1, arg_8, ErlangAtom "reject", arg_10]
  in
    case case_4 of
      (ErlangTuple [a_11, alen_12, ics1_13, l1_14]) ->
        let arg_17 = erlps__yyaction__4 [a_11, alen_12, tcs_2, l0_1]
        in erlps__string_cont__4 [ics1_13, l1_14, arg_17, ts_3]
      (ErlangTuple [a_23, alen_24, ics1_25, l1_26, _s1_27]) ->
        let arg_30 = erlps__yyaction__4 [a_23, alen_24, tcs_2, l0_1]
        in erlps__string_cont__4 [ics1_25, l1_26, arg_30, ts_3]
      (ErlangTuple [(ErlangAtom "reject"), _alen_36, tlen_37, _ics1_38,
                    l1_39, _s1_40]) ->
        let    rop_51 = toErl 1
        in let arg_49 = BIF.erlang__op_plus [tlen_37, rop_51]
        in let tup_el_47 = erlps__yypre__2 [tcs_2, arg_49]
        in let tup_el_45 = ErlangTuple [ErlangAtom "illegal", tup_el_47]
        in let
          tup_el_42 =
            ErlangTuple [l0_1, ErlangAtom "aeb_asm_scan", tup_el_45]
        in ErlangTuple [ErlangAtom "error", tup_el_42, l1_39]
      (ErlangTuple [a_53, alen_54, tlen_55, _ics1_56, l1_57,
                    _s1_58]) ->
        let    tcs1_61 = erlps__yysuf__2 [tcs_2, alen_54]
        in let
          l2_66 = erlps__adjust_line__4 [tlen_55, alen_54, tcs1_61, l1_57]
        in let arg_69 = erlps__yyaction__4 [a_53, alen_54, tcs_2, l0_1]
        in erlps__string_cont__4 [tcs1_61, l2_66, arg_69, ts_3]
      something_else -> EXC.case_clause something_else
erlps__string__4 [arg_75, arg_76, arg_77, arg_78] =
  EXC.function_clause unit
erlps__string__4 args =
  EXC.badarity (ErlangFun 4 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__string_cont__4 :: ErlangFun
erlps__string_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "token"), t_2]), ts_3]
  =
  erlps__string__4 [rest_0, line_1, rest_0, ErlangCons t_2 ts_3]
erlps__string_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "token"), t_2, push_3]), ts_4]
  =
  let newrest_7 = BIF.erlang__op_append [push_3, rest_0]
  in
    erlps__string__4
      [newrest_7, line_1, newrest_7, ErlangCons t_2 ts_4]
erlps__string_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "end_token"), t_2]), ts_3]
  =
  erlps__string__4 [rest_0, line_1, rest_0, ErlangCons t_2 ts_3]
erlps__string_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "end_token"), t_2, push_3]),
                       ts_4]
  =
  let newrest_7 = BIF.erlang__op_append [push_3, rest_0]
  in
    erlps__string__4
      [newrest_7, line_1, newrest_7, ErlangCons t_2 ts_4]
erlps__string_cont__4 [rest_0, line_1, (ErlangAtom "skip_token"),
                       ts_2]
  =
  erlps__string__4 [rest_0, line_1, rest_0, ts_2]
erlps__string_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "skip_token"), push_2]), ts_3]
  =
  let newrest_6 = BIF.erlang__op_append [push_2, rest_0]
  in erlps__string__4 [newrest_6, line_1, newrest_6, ts_3]
erlps__string_cont__4 [_rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "error"), s_2]), _ts_3]
  =
  let    tup_el_8 = ErlangTuple [ErlangAtom "user", s_2]
  in let
    tup_el_5 =
      ErlangTuple [line_1, ErlangAtom "aeb_asm_scan", tup_el_8]
  in ErlangTuple [ErlangAtom "error", tup_el_5, line_1]
erlps__string_cont__4 [arg_12, arg_13, arg_14, arg_15] =
  EXC.function_clause unit
erlps__string_cont__4 args =
  EXC.badarity (ErlangFun 4 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__token__2 :: ErlangFun
erlps__token__2 [cont_0, chars_1] =
  let arg_4 = toErl 1
  in erlps__token__3 [cont_0, chars_1, arg_4]
erlps__token__2 [arg_5, arg_6] = EXC.function_clause unit
erlps__token__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__token__3 :: ErlangFun
erlps__token__3 [(ErlangEmptyList), chars_0, line_1] =
  let    arg_2 = erlps__yystate__0 []
  in let arg_6 = toErl 0
  in let arg_9 = toErl 0
  in
    erlps__token__8
      [arg_2, chars_0, line_1, chars_0, arg_6, line_1,
       ErlangAtom "reject", arg_9]
erlps__token__3 [(ErlangTuple [(ErlangAtom "token"), state_0,
                               line_1, tcs_2, tlen_3, tline_4, action_5,
                               alen_6]),
                 chars_7, _]
  =
  let arg_11 = BIF.erlang__op_append [tcs_2, chars_7]
  in
    erlps__token__8
      [state_0, chars_7, line_1, arg_11, tlen_3, tline_4, action_5,
       alen_6]
erlps__token__3 [arg_18, arg_19, arg_20] =
  EXC.function_clause unit
erlps__token__3 args =
  EXC.badarity (ErlangFun 3 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__token__8 :: ErlangFun
erlps__token__8 [s0_0, ics0_1, l0_2, tcs_3, tlen0_4, tline_5,
                 a0_6, alen0_7]
  =
  let
    case_8 =
      erlps__yystate__6 [s0_0, ics0_1, l0_2, tlen0_4, a0_6, alen0_7]
  in
    case case_8 of
      (ErlangTuple [a1_15, alen1_16, ics1_17, l1_18]) ->
        let arg_21 = erlps__yyaction__4 [a1_15, alen1_16, tcs_3, tline_5]
        in erlps__token_cont__3 [ics1_17, l1_18, arg_21]
      (ErlangTuple [a1_26, alen1_27, (ErlangEmptyList), l1_28,
                    s1_29]) ->
        let
          tup_el_31 =
            ErlangTuple
              [ErlangAtom "token", s1_29, l1_28, tcs_3, alen1_27, tline_5,
               a1_26, alen1_27]
        in ErlangTuple [ErlangAtom "more", tup_el_31]
      (ErlangTuple [a1_40, alen1_41, ics1_42, l1_43, _s1_44]) ->
        let arg_47 = erlps__yyaction__4 [a1_40, alen1_41, tcs_3, tline_5]
        in erlps__token_cont__3 [ics1_42, l1_43, arg_47]
      (ErlangTuple [a1_52, alen1_53, tlen1_54, (ErlangEmptyList),
                    l1_55, s1_56]) ->
        let
          tup_el_58 =
            ErlangTuple
              [ErlangAtom "token", s1_56, l1_55, tcs_3, tlen1_54, tline_5,
               a1_52, alen1_53]
        in ErlangTuple [ErlangAtom "more", tup_el_58]
      (ErlangTuple [(ErlangAtom "reject"), _alen1_67, tlen1_68,
                    (ErlangAtom "eof"), l1_69, _s1_70]) ->
        let
          ret_83 =
            case ErlangAtom "true" of
              _ | weakGt tlen1_68 (toErl 0) ->
                let    tup_el_77 = erlps__yypre__2 [tcs_3, tlen1_68]
                in let tup_el_75 = ErlangTuple [ErlangAtom "illegal", tup_el_77]
                in let
                  tup_el_72 =
                    ErlangTuple [tline_5, ErlangAtom "aeb_asm_scan", tup_el_75]
                in ErlangTuple [ErlangAtom "error", tup_el_72, l1_69]
              _ -> ErlangTuple [ErlangAtom "eof", l1_69]
        in ErlangTuple [ErlangAtom "done", ret_83, ErlangAtom "eof"]
      (ErlangTuple [(ErlangAtom "reject"), _alen1_87, tlen1_88,
                    ics1_89, l1_90, _s1_91]) ->
        let    rop_100 = toErl 1
        in let arg_98 = BIF.erlang__op_plus [tlen1_88, rop_100]
        in let tup_el_96 = erlps__yypre__2 [tcs_3, arg_98]
        in let tup_el_94 = ErlangTuple [ErlangAtom "illegal", tup_el_96]
        in let
          error_101 =
            ErlangTuple [tline_5, ErlangAtom "aeb_asm_scan", tup_el_94]
        in let
          tup_el_103 = ErlangTuple [ErlangAtom "error", error_101, l1_90]
        in ErlangTuple [ErlangAtom "done", tup_el_103, ics1_89]
      (ErlangTuple [a1_108, alen1_109, tlen1_110, _ics1_111, l1_112,
                    _s1_113]) ->
        let    tcs1_116 = erlps__yysuf__2 [tcs_3, alen1_109]
        in let
          l2_121 =
            erlps__adjust_line__4 [tlen1_110, alen1_109, tcs1_116, l1_112]
        in let
          arg_124 = erlps__yyaction__4 [a1_108, alen1_109, tcs_3, tline_5]
        in erlps__token_cont__3 [tcs1_116, l2_121, arg_124]
      something_else -> EXC.case_clause something_else
erlps__token__8 [arg_129, arg_130, arg_131, arg_132, arg_133,
                 arg_134, arg_135, arg_136]
  =
  EXC.function_clause unit
erlps__token__8 args =
  EXC.badarity (ErlangFun 8 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__token_cont__3 :: ErlangFun
erlps__token_cont__3 [rest_0, line_1,
                      (ErlangTuple [(ErlangAtom "token"), t_2])]
  =
  let tup_el_4 = ErlangTuple [ErlangAtom "ok", t_2, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_4, rest_0]
erlps__token_cont__3 [rest_0, line_1,
                      (ErlangTuple [(ErlangAtom "token"), t_2, push_3])]
  =
  let    newrest_6 = BIF.erlang__op_append [push_3, rest_0]
  in let tup_el_8 = ErlangTuple [ErlangAtom "ok", t_2, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_8, newrest_6]
erlps__token_cont__3 [rest_0, line_1,
                      (ErlangTuple [(ErlangAtom "end_token"), t_2])]
  =
  let tup_el_4 = ErlangTuple [ErlangAtom "ok", t_2, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_4, rest_0]
erlps__token_cont__3 [rest_0, line_1,
                      (ErlangTuple [(ErlangAtom "end_token"), t_2, push_3])]
  =
  let    newrest_6 = BIF.erlang__op_append [push_3, rest_0]
  in let tup_el_8 = ErlangTuple [ErlangAtom "ok", t_2, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_8, newrest_6]
erlps__token_cont__3 [rest_0, line_1, (ErlangAtom "skip_token")]
  =
  let    arg_2 = erlps__yystate__0 []
  in let arg_6 = toErl 0
  in let arg_9 = toErl 0
  in
    erlps__token__8
      [arg_2, rest_0, line_1, rest_0, arg_6, line_1,
       ErlangAtom "reject", arg_9]
erlps__token_cont__3 [rest_0, line_1,
                      (ErlangTuple [(ErlangAtom "skip_token"), push_2])]
  =
  let    newrest_5 = BIF.erlang__op_append [push_2, rest_0]
  in let arg_6 = erlps__yystate__0 []
  in let arg_10 = toErl 0
  in let arg_13 = toErl 0
  in
    erlps__token__8
      [arg_6, newrest_5, line_1, newrest_5, arg_10, line_1,
       ErlangAtom "reject", arg_13]
erlps__token_cont__3 [rest_0, line_1,
                      (ErlangTuple [(ErlangAtom "error"), s_2])]
  =
  let    tup_el_9 = ErlangTuple [ErlangAtom "user", s_2]
  in let
    tup_el_6 =
      ErlangTuple [line_1, ErlangAtom "aeb_asm_scan", tup_el_9]
  in let
    tup_el_4 = ErlangTuple [ErlangAtom "error", tup_el_6, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_4, rest_0]
erlps__token_cont__3 [arg_14, arg_15, arg_16] =
  EXC.function_clause unit
erlps__token_cont__3 args =
  EXC.badarity (ErlangFun 3 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__tokens__2 :: ErlangFun
erlps__tokens__2 [cont_0, chars_1] =
  let arg_4 = toErl 1
  in erlps__tokens__3 [cont_0, chars_1, arg_4]
erlps__tokens__2 [arg_5, arg_6] = EXC.function_clause unit
erlps__tokens__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__tokens__3 :: ErlangFun
erlps__tokens__3 [(ErlangEmptyList), chars_0, line_1] =
  let    arg_2 = erlps__yystate__0 []
  in let arg_6 = toErl 0
  in let arg_10 = toErl 0
  in
    erlps__tokens__9
      [arg_2, chars_0, line_1, chars_0, arg_6, line_1, ErlangEmptyList,
       ErlangAtom "reject", arg_10]
erlps__tokens__3 [(ErlangTuple [(ErlangAtom "tokens"), state_0,
                                line_1, tcs_2, tlen_3, tline_4, ts_5, action_6,
                                alen_7]),
                  chars_8, _]
  =
  let arg_12 = BIF.erlang__op_append [tcs_2, chars_8]
  in
    erlps__tokens__9
      [state_0, chars_8, line_1, arg_12, tlen_3, tline_4, ts_5,
       action_6, alen_7]
erlps__tokens__3 [(ErlangTuple [(ErlangAtom "skip_tokens"),
                                state_0, line_1, tcs_2, tlen_3, tline_4,
                                error_5, action_6, alen_7]),
                  chars_8, _]
  =
  let arg_12 = BIF.erlang__op_append [tcs_2, chars_8]
  in
    erlps__skip_tokens__9
      [state_0, chars_8, line_1, arg_12, tlen_3, tline_4, error_5,
       action_6, alen_7]
erlps__tokens__3 [arg_20, arg_21, arg_22] =
  EXC.function_clause unit
erlps__tokens__3 args =
  EXC.badarity (ErlangFun 3 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__tokens__9 :: ErlangFun
erlps__tokens__9 [s0_0, ics0_1, l0_2, tcs_3, tlen0_4, tline_5,
                  ts_6, a0_7, alen0_8]
  =
  let
    case_9 =
      erlps__yystate__6 [s0_0, ics0_1, l0_2, tlen0_4, a0_7, alen0_8]
  in
    case case_9 of
      (ErlangTuple [a1_16, alen1_17, ics1_18, l1_19]) ->
        let arg_22 = erlps__yyaction__4 [a1_16, alen1_17, tcs_3, tline_5]
        in erlps__tokens_cont__4 [ics1_18, l1_19, arg_22, ts_6]
      (ErlangTuple [a1_28, alen1_29, (ErlangEmptyList), l1_30,
                    s1_31]) ->
        let
          tup_el_33 =
            ErlangTuple
              [ErlangAtom "tokens", s1_31, l1_30, tcs_3, alen1_29, tline_5,
               ts_6, a1_28, alen1_29]
        in ErlangTuple [ErlangAtom "more", tup_el_33]
      (ErlangTuple [a1_43, alen1_44, ics1_45, l1_46, _s1_47]) ->
        let arg_50 = erlps__yyaction__4 [a1_43, alen1_44, tcs_3, tline_5]
        in erlps__tokens_cont__4 [ics1_45, l1_46, arg_50, ts_6]
      (ErlangTuple [a1_56, alen1_57, tlen1_58, (ErlangEmptyList),
                    l1_59, s1_60]) ->
        let
          tup_el_62 =
            ErlangTuple
              [ErlangAtom "tokens", s1_60, l1_59, tcs_3, tlen1_58, tline_5,
               ts_6, a1_56, alen1_57]
        in ErlangTuple [ErlangAtom "more", tup_el_62]
      (ErlangTuple [(ErlangAtom "reject"), _alen1_72, tlen1_73,
                    (ErlangAtom "eof"), l1_74, _s1_75]) ->
        let
          ret_92 =
            case ErlangAtom "true" of
              _ | weakGt tlen1_73 (toErl 0) ->
                let    tup_el_82 = erlps__yypre__2 [tcs_3, tlen1_73]
                in let tup_el_80 = ErlangTuple [ErlangAtom "illegal", tup_el_82]
                in let
                  tup_el_77 =
                    ErlangTuple [tline_5, ErlangAtom "aeb_asm_scan", tup_el_80]
                in ErlangTuple [ErlangAtom "error", tup_el_77, l1_74]
              _ | weakEq ts_6 ErlangEmptyList ->
                ErlangTuple [ErlangAtom "eof", l1_74]
              _ ->
                let tup_el_89 = erlps__yyrev__1 [ts_6]
                in ErlangTuple [ErlangAtom "ok", tup_el_89, l1_74]
        in ErlangTuple [ErlangAtom "done", ret_92, ErlangAtom "eof"]
      (ErlangTuple [(ErlangAtom "reject"), _alen1_96, tlen1_97,
                    _ics1_98, l1_99, _s1_100]) ->
        let    rop_109 = toErl 1
        in let arg_107 = BIF.erlang__op_plus [tlen1_97, rop_109]
        in let tup_el_105 = erlps__yypre__2 [tcs_3, arg_107]
        in let
          tup_el_103 = ErlangTuple [ErlangAtom "illegal", tup_el_105]
        in let
          error_110 =
            ErlangTuple [l1_99, ErlangAtom "aeb_asm_scan", tup_el_103]
        in let rop_115 = toErl 1
        in let arg_113 = BIF.erlang__op_plus [tlen1_97, rop_115]
        in let arg_111 = erlps__yysuf__2 [tcs_3, arg_113]
        in erlps__skip_tokens__3 [arg_111, l1_99, error_110]
      (ErlangTuple [a1_118, alen1_119, tlen1_120, _ics1_121, l1_122,
                    _s1_123]) ->
        let   
          token_128 =
            erlps__yyaction__4 [a1_118, alen1_119, tcs_3, tline_5]
        in let tcs1_131 = erlps__yysuf__2 [tcs_3, alen1_119]
        in let
          l2_136 =
            erlps__adjust_line__4 [tlen1_120, alen1_119, tcs1_131, l1_122]
        in erlps__tokens_cont__4 [tcs1_131, l2_136, token_128, ts_6]
      something_else -> EXC.case_clause something_else
erlps__tokens__9 [arg_141, arg_142, arg_143, arg_144, arg_145,
                  arg_146, arg_147, arg_148, arg_149]
  =
  EXC.function_clause unit
erlps__tokens__9 args =
  EXC.badarity (ErlangFun 9 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__tokens_cont__4 :: ErlangFun
erlps__tokens_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "token"), t_2]), ts_3]
  =
  let    arg_4 = erlps__yystate__0 []
  in let arg_8 = toErl 0
  in let arg_14 = toErl 0
  in
    erlps__tokens__9
      [arg_4, rest_0, line_1, rest_0, arg_8, line_1,
       ErlangCons t_2 ts_3, ErlangAtom "reject", arg_14]
erlps__tokens_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "token"), t_2, push_3]), ts_4]
  =
  let    newrest_7 = BIF.erlang__op_append [push_3, rest_0]
  in let arg_8 = erlps__yystate__0 []
  in let arg_12 = toErl 0
  in let arg_18 = toErl 0
  in
    erlps__tokens__9
      [arg_8, newrest_7, line_1, newrest_7, arg_12, line_1,
       ErlangCons t_2 ts_4, ErlangAtom "reject", arg_18]
erlps__tokens_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "end_token"), t_2]), ts_3]
  =
  let   
    tup_el_7 = erlps__yyrev__2 [ts_3, ErlangCons t_2 ErlangEmptyList]
  in let tup_el_5 = ErlangTuple [ErlangAtom "ok", tup_el_7, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_5, rest_0]
erlps__tokens_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "end_token"), t_2, push_3]),
                       ts_4]
  =
  let    newrest_7 = BIF.erlang__op_append [push_3, rest_0]
  in let
    tup_el_11 =
      erlps__yyrev__2 [ts_4, ErlangCons t_2 ErlangEmptyList]
  in let
    tup_el_9 = ErlangTuple [ErlangAtom "ok", tup_el_11, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_9, newrest_7]
erlps__tokens_cont__4 [rest_0, line_1, (ErlangAtom "skip_token"),
                       ts_2]
  =
  let    arg_3 = erlps__yystate__0 []
  in let arg_7 = toErl 0
  in let arg_11 = toErl 0
  in
    erlps__tokens__9
      [arg_3, rest_0, line_1, rest_0, arg_7, line_1, ts_2,
       ErlangAtom "reject", arg_11]
erlps__tokens_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "skip_token"), push_2]), ts_3]
  =
  let    newrest_6 = BIF.erlang__op_append [push_2, rest_0]
  in let arg_7 = erlps__yystate__0 []
  in let arg_11 = toErl 0
  in let arg_15 = toErl 0
  in
    erlps__tokens__9
      [arg_7, newrest_6, line_1, newrest_6, arg_11, line_1, ts_3,
       ErlangAtom "reject", arg_15]
erlps__tokens_cont__4 [rest_0, line_1,
                       (ErlangTuple [(ErlangAtom "error"), s_2]), _ts_3]
  =
  let    tup_el_9 = ErlangTuple [ErlangAtom "user", s_2]
  in let
    arg_6 = ErlangTuple [line_1, ErlangAtom "aeb_asm_scan", tup_el_9]
  in erlps__skip_tokens__3 [rest_0, line_1, arg_6]
erlps__tokens_cont__4 [arg_12, arg_13, arg_14, arg_15] =
  EXC.function_clause unit
erlps__tokens_cont__4 args =
  EXC.badarity (ErlangFun 4 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__skip_tokens__3 :: ErlangFun
erlps__skip_tokens__3 [ics_0, line_1, error_2] =
  let    arg_3 = erlps__yystate__0 []
  in let arg_7 = toErl 0
  in let arg_11 = toErl 0
  in
    erlps__skip_tokens__9
      [arg_3, ics_0, line_1, ics_0, arg_7, line_1, error_2,
       ErlangAtom "reject", arg_11]
erlps__skip_tokens__3 [arg_12, arg_13, arg_14] =
  EXC.function_clause unit
erlps__skip_tokens__3 args =
  EXC.badarity (ErlangFun 3 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__skip_tokens__9 :: ErlangFun
erlps__skip_tokens__9 [s0_0, ics0_1, l0_2, tcs_3, tlen0_4,
                       tline_5, error_6, a0_7, alen0_8]
  =
  let
    case_9 =
      erlps__yystate__6 [s0_0, ics0_1, l0_2, tlen0_4, a0_7, alen0_8]
  in
    case case_9 of
      (ErlangTuple [a1_16, alen1_17, ics1_18, l1_19]) ->
        let arg_22 = erlps__yyaction__4 [a1_16, alen1_17, tcs_3, tline_5]
        in erlps__skip_cont__4 [ics1_18, l1_19, arg_22, error_6]
      (ErlangTuple [a1_28, alen1_29, (ErlangEmptyList), l1_30,
                    s1_31]) ->
        let
          tup_el_33 =
            ErlangTuple
              [ErlangAtom "skip_tokens", s1_31, l1_30, tcs_3, alen1_29,
               tline_5, error_6, a1_28, alen1_29]
        in ErlangTuple [ErlangAtom "more", tup_el_33]
      (ErlangTuple [a1_43, alen1_44, ics1_45, l1_46, _s1_47]) ->
        let arg_50 = erlps__yyaction__4 [a1_43, alen1_44, tcs_3, tline_5]
        in erlps__skip_cont__4 [ics1_45, l1_46, arg_50, error_6]
      (ErlangTuple [a1_56, alen1_57, tlen1_58, (ErlangEmptyList),
                    l1_59, s1_60]) ->
        let
          tup_el_62 =
            ErlangTuple
              [ErlangAtom "skip_tokens", s1_60, l1_59, tcs_3, tlen1_58,
               tline_5, error_6, a1_56, alen1_57]
        in ErlangTuple [ErlangAtom "more", tup_el_62]
      (ErlangTuple [(ErlangAtom "reject"), _alen1_72, _tlen1_73,
                    (ErlangAtom "eof"), l1_74, _s1_75]) ->
        let tup_el_77 = ErlangTuple [ErlangAtom "error", error_6, l1_74]
        in ErlangTuple [ErlangAtom "done", tup_el_77, ErlangAtom "eof"]
      (ErlangTuple [(ErlangAtom "reject"), _alen1_82, tlen1_83,
                    _ics1_84, l1_85, _s1_86]) ->
        let    rop_91 = toErl 1
        in let arg_89 = BIF.erlang__op_plus [tlen1_83, rop_91]
        in let arg_87 = erlps__yysuf__2 [tcs_3, arg_89]
        in erlps__skip_tokens__3 [arg_87, l1_85, error_6]
      (ErlangTuple [a1_94, alen1_95, tlen1_96, _ics1_97, l1_98,
                    _s1_99]) ->
        let   
          token_104 = erlps__yyaction__4 [a1_94, alen1_95, tcs_3, tline_5]
        in let tcs1_107 = erlps__yysuf__2 [tcs_3, alen1_95]
        in let
          l2_112 =
            erlps__adjust_line__4 [tlen1_96, alen1_95, tcs1_107, l1_98]
        in erlps__skip_cont__4 [tcs1_107, l2_112, token_104, error_6]
      something_else -> EXC.case_clause something_else
erlps__skip_tokens__9 [arg_117, arg_118, arg_119, arg_120,
                       arg_121, arg_122, arg_123, arg_124, arg_125]
  =
  EXC.function_clause unit
erlps__skip_tokens__9 args =
  EXC.badarity (ErlangFun 9 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__skip_cont__4 :: ErlangFun
erlps__skip_cont__4 [rest_0, line_1,
                     (ErlangTuple [(ErlangAtom "token"), _t_2]), error_3]
  =
  let    arg_4 = erlps__yystate__0 []
  in let arg_8 = toErl 0
  in let arg_12 = toErl 0
  in
    erlps__skip_tokens__9
      [arg_4, rest_0, line_1, rest_0, arg_8, line_1, error_3,
       ErlangAtom "reject", arg_12]
erlps__skip_cont__4 [rest_0, line_1,
                     (ErlangTuple [(ErlangAtom "token"), _t_2, push_3]),
                     error_4]
  =
  let    newrest_7 = BIF.erlang__op_append [push_3, rest_0]
  in let arg_8 = erlps__yystate__0 []
  in let arg_12 = toErl 0
  in let arg_16 = toErl 0
  in
    erlps__skip_tokens__9
      [arg_8, newrest_7, line_1, newrest_7, arg_12, line_1, error_4,
       ErlangAtom "reject", arg_16]
erlps__skip_cont__4 [rest_0, line_1,
                     (ErlangTuple [(ErlangAtom "end_token"), _t_2]), error_3]
  =
  let tup_el_5 = ErlangTuple [ErlangAtom "error", error_3, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_5, rest_0]
erlps__skip_cont__4 [rest_0, line_1,
                     (ErlangTuple [(ErlangAtom "end_token"), _t_2, push_3]),
                     error_4]
  =
  let    newrest_7 = BIF.erlang__op_append [push_3, rest_0]
  in let
    tup_el_9 = ErlangTuple [ErlangAtom "error", error_4, line_1]
  in ErlangTuple [ErlangAtom "done", tup_el_9, newrest_7]
erlps__skip_cont__4 [rest_0, line_1, (ErlangAtom "skip_token"),
                     error_2]
  =
  let    arg_3 = erlps__yystate__0 []
  in let arg_7 = toErl 0
  in let arg_11 = toErl 0
  in
    erlps__skip_tokens__9
      [arg_3, rest_0, line_1, rest_0, arg_7, line_1, error_2,
       ErlangAtom "reject", arg_11]
erlps__skip_cont__4 [rest_0, line_1,
                     (ErlangTuple [(ErlangAtom "skip_token"), push_2]), error_3]
  =
  let    newrest_6 = BIF.erlang__op_append [push_2, rest_0]
  in let arg_7 = erlps__yystate__0 []
  in let arg_11 = toErl 0
  in let arg_15 = toErl 0
  in
    erlps__skip_tokens__9
      [arg_7, newrest_6, line_1, newrest_6, arg_11, line_1, error_3,
       ErlangAtom "reject", arg_15]
erlps__skip_cont__4 [rest_0, line_1,
                     (ErlangTuple [(ErlangAtom "error"), _s_2]), error_3]
  =
  let    arg_4 = erlps__yystate__0 []
  in let arg_8 = toErl 0
  in let arg_12 = toErl 0
  in
    erlps__skip_tokens__9
      [arg_4, rest_0, line_1, rest_0, arg_8, line_1, error_3,
       ErlangAtom "reject", arg_12]
erlps__skip_cont__4 [arg_13, arg_14, arg_15, arg_16] =
  EXC.function_clause unit
erlps__skip_cont__4 args =
  EXC.badarity (ErlangFun 4 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyrev__1 :: ErlangFun
erlps__yyrev__1 [list_0] =
  BIF.do_remote_fun_call "Lists" "erlps__reverse__1" [list_0]
erlps__yyrev__1 [arg_2] = EXC.function_clause unit
erlps__yyrev__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyrev__2 :: ErlangFun
erlps__yyrev__2 [list_0, tail_1] =
  BIF.lists__reverse__2 [list_0, tail_1]
erlps__yyrev__2 [arg_4, arg_5] = EXC.function_clause unit
erlps__yyrev__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yypre__2 :: ErlangFun
erlps__yypre__2 [list_0, n_1] =
  BIF.do_remote_fun_call "Lists" "erlps__sublist__2" [list_0, n_1]
erlps__yypre__2 [arg_4, arg_5] = EXC.function_clause unit
erlps__yypre__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yysuf__2 :: ErlangFun
erlps__yysuf__2 [list_0, n_1] =
  BIF.do_remote_fun_call "Lists" "erlps__nthtail__2" [n_1, list_0]
erlps__yysuf__2 [arg_4, arg_5] = EXC.function_clause unit
erlps__yysuf__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__adjust_line__4 :: ErlangFun
erlps__adjust_line__4 [n_0, n_1, _cs_2, l_3] | n_1 == n_0 = l_3
erlps__adjust_line__4 [t_0, a_1,
                       (ErlangCons (ErlangInt num_2) cs_3), l_4]
  | (ErlangInt num_2) == (toErl 10) =
  let    rop_7 = toErl 1
  in let arg_5 = BIF.erlang__op_minus [t_0, rop_7]
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_minus [l_4, rop_12]
  in erlps__adjust_line__4 [arg_5, a_1, cs_3, arg_10]
erlps__adjust_line__4 [t_0, a_1, (ErlangCons _ cs_2), l_3] =
  let    rop_6 = toErl 1
  in let arg_4 = BIF.erlang__op_minus [t_0, rop_6]
  in erlps__adjust_line__4 [arg_4, a_1, cs_2, l_3]
erlps__adjust_line__4 [arg_10, arg_11, arg_12, arg_13] =
  EXC.function_clause unit
erlps__adjust_line__4 args =
  EXC.badarity (ErlangFun 4 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yystate__0 :: ErlangFun
erlps__yystate__0 [] = toErl 382
erlps__yystate__0 args =
  EXC.badarity (ErlangFun 0 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yystate__6 :: ErlangFun
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 385)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_5 = toErl 383
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 385) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 385
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 384) =
  let tup_el_4 = toErl 149
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 383)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 379
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 383) =
  let tup_el_11 = toErl 383
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 125) =
  let    arg_7 = toErl 378
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 124) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 123) =
  let    arg_7 = toErl 374
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 96) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 95) =
  let    arg_7 = toErl 370
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 94) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 93) =
  let    arg_7 = toErl 362
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 92) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 91) =
  let    arg_7 = toErl 358
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 89) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 90) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 88) =
  let    arg_7 = toErl 354
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 342
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 306
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 34
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 81) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 53
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 209
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 233
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 265
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 349
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 75) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 74) =
  let    arg_7 = toErl 385
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 351
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 72) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 71) =
  let    arg_7 = toErl 303
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 70) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 247
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 179
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 19
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 66) =
  let    arg_7 = toErl 212
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 284
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 59) =
  let    arg_7 = toErl 332
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 58) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 48) =
  let    arg_7 = toErl 344
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 47) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 46) =
  let    arg_7 = toErl 356
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 45) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 44) =
  let    arg_7 = toErl 360
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 42) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 43) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 41) =
  let    arg_7 = toErl 364
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 40) =
  let    arg_7 = toErl 368
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 35) =
  let    arg_7 = toErl 372
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 33) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 34) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (ErlangInt num_1) == (toErl 10) =
  let    arg_7 = toErl 384
  in let rop_11 = toErl 1
  in let arg_9 = BIF.erlang__op_plus [line_3, rop_11]
  in let rop_14 = toErl 1
  in let arg_12 = BIF.erlang__op_plus [tlen_4, rop_14]
  in
    erlps__yystate__6 [arg_7, ics_2, arg_9, arg_12, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (weakGeq c_1 (toErl 0)) && (weakLeq c_1 (toErl 9)) =
  let    arg_7 = toErl 384
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (weakGeq c_1 (toErl 11)) && (weakLeq c_1 (toErl 32)) =
  let    arg_7 = toErl 384
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (weakGeq c_1 (toErl 36)) && (weakLeq c_1 (toErl 39)) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (weakGeq c_1 (toErl 49)) && (weakLeq c_1 (toErl 57)) =
  let    arg_7 = toErl 340
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (weakGeq c_1 (toErl 60)) && (weakLeq c_1 (toErl 64)) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (weakGeq c_1 (toErl 85)) && (weakLeq c_1 (toErl 87)) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , (weakGeq c_1 (toErl 97)) && (weakLeq c_1 (toErl 122)) =
  let    arg_7 = toErl 370
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 382)
  , weakGeq c_1 (toErl 126) =
  let    arg_7 = toErl 380
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 382) =
  let tup_el_11 = toErl 382
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 381) =
  let tup_el_4 = toErl 122
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 380) =
  let tup_el_4 = toErl 151
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 379)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 375
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 379) =
  let tup_el_11 = toErl 379
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 378) =
  let tup_el_4 = toErl 148
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 377) =
  let tup_el_4 = toErl 123
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 376)
  , (weakGeq c_1 (toErl 48)) && (weakLeq c_1 (toErl 57)) =
  let    arg_5 = toErl 376
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 140
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 376)
  , (weakGeq c_1 (toErl 65)) && (weakLeq c_1 (toErl 70)) =
  let    arg_5 = toErl 376
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 140
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 376)
  , (weakGeq c_1 (toErl 97)) && (weakLeq c_1 (toErl 102)) =
  let    arg_5 = toErl 376
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 140
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 376) =
  let    tup_el_4 = toErl 140
  in let tup_el_8 = toErl 376
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 375)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_5 = toErl 371
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 52
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 375)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_5 = toErl 367
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 52
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 375) =
  let    tup_el_4 = toErl 52
  in let tup_el_8 = toErl 375
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 374) =
  let tup_el_4 = toErl 147
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 373) =
  let tup_el_4 = toErl 124
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 372)
  , (weakGeq c_1 (toErl 48)) && (weakLeq c_1 (toErl 57)) =
  let    arg_5 = toErl 376
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 372)
  , (weakGeq c_1 (toErl 65)) && (weakLeq c_1 (toErl 70)) =
  let    arg_5 = toErl 376
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 372)
  , (weakGeq c_1 (toErl 97)) && (weakLeq c_1 (toErl 102)) =
  let    arg_5 = toErl 376
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 372) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 372
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 371) =
  let tup_el_4 = toErl 53
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 370)
  , (ErlangInt num_1) == (toErl 95) =
  let    arg_5 = toErl 370
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 137
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 370)
  , (ErlangInt num_1) == (toErl 58) =
  let    arg_5 = toErl 366
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 137
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 370)
  , (weakGeq c_1 (toErl 48)) && (weakLeq c_1 (toErl 57)) =
  let    arg_5 = toErl 370
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 137
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 370)
  , (weakGeq c_1 (toErl 65)) && (weakLeq c_1 (toErl 90)) =
  let    arg_5 = toErl 370
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 137
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 370)
  , (weakGeq c_1 (toErl 97)) && (weakLeq c_1 (toErl 122)) =
  let    arg_5 = toErl 370
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 137
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 370) =
  let    tup_el_4 = toErl 137
  in let tup_el_8 = toErl 370
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 369) =
  let tup_el_4 = toErl 125
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 368) =
  let tup_el_4 = toErl 143
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 367)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 363
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 367) =
  let tup_el_11 = toErl 367
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 366) =
  let tup_el_4 = toErl 0
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 365) =
  let tup_el_4 = toErl 126
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 364) =
  let tup_el_4 = toErl 144
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 363)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 359
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 363) =
  let tup_el_11 = toErl 363
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 362) =
  let tup_el_4 = toErl 146
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 361)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_7 = toErl 365
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 361)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_7 = toErl 369
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 361)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_7 = toErl 373
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 361)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_7 = toErl 377
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 361)
  , (ErlangInt num_1) == (toErl 48) =
  let    arg_7 = toErl 381
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 361) =
  let tup_el_11 = toErl 361
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 360) =
  let tup_el_4 = toErl 141
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 359)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 355
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 359) =
  let tup_el_11 = toErl 359
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 358) =
  let tup_el_4 = toErl 145
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 357)
  , (ErlangInt num_1) == (toErl 71) =
  let    arg_7 = toErl 361
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 357) =
  let tup_el_11 = toErl 357
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 356) =
  let tup_el_4 = toErl 142
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 355) =
  let tup_el_4 = toErl 57
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 354)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_5 = toErl 350
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 354) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 354
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 353) =
  let tup_el_4 = toErl 13
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 352)
  , (weakGeq c_1 (toErl 48)) && (weakLeq c_1 (toErl 57)) =
  let    arg_5 = toErl 352
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 138
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 352)
  , (weakGeq c_1 (toErl 65)) && (weakLeq c_1 (toErl 70)) =
  let    arg_5 = toErl 352
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 138
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 352)
  , (weakGeq c_1 (toErl 97)) && (weakLeq c_1 (toErl 102)) =
  let    arg_5 = toErl 352
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 138
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 352) =
  let    tup_el_4 = toErl 138
  in let tup_el_8 = toErl 352
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 351)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_5 = toErl 347
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 351)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_5 = toErl 327
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 351) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 351
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 350)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 346
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 350) =
  let tup_el_11 = toErl 350
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 349)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_5 = toErl 353
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 349)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_5 = toErl 357
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 349) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 349
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 348)
  , (weakGeq c_1 (toErl 48)) && (weakLeq c_1 (toErl 57)) =
  let    arg_7 = toErl 352
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 348)
  , (weakGeq c_1 (toErl 65)) && (weakLeq c_1 (toErl 70)) =
  let    arg_7 = toErl 352
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, action_5, alen_6]
  | (ErlangInt num_0) == (toErl 348)
  , (weakGeq c_1 (toErl 97)) && (weakLeq c_1 (toErl 102)) =
  let    arg_7 = toErl 352
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 348) =
  let tup_el_11 = toErl 348
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 347)
  , (ErlangInt num_1) == (toErl 90) =
  let    arg_7 = toErl 343
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 347) =
  let tup_el_11 = toErl 347
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 346) =
  let tup_el_4 = toErl 21
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 345) =
  let tup_el_4 = toErl 47
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 344)
  , (ErlangInt num_1) == (toErl 120) =
  let    arg_5 = toErl 348
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 139
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 344)
  , (weakGeq c_1 (toErl 48)) && (weakLeq c_1 (toErl 57)) =
  let    arg_5 = toErl 340
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 139
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 344) =
  let    tup_el_4 = toErl 139
  in let tup_el_8 = toErl 344
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 343)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 339
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 343) =
  let tup_el_11 = toErl 343
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 342)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_5 = toErl 338
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 342) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 342
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 341)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 345
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 341) =
  let tup_el_11 = toErl 341
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 340)
  , (weakGeq c_1 (toErl 48)) && (weakLeq c_1 (toErl 57)) =
  let    arg_5 = toErl 340
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 139
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 340) =
  let    tup_el_4 = toErl 139
  in let tup_el_8 = toErl 340
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 339)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 335
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 339) =
  let tup_el_11 = toErl 339
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 338)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 334
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 338) =
  let tup_el_11 = toErl 338
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 337)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 341
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 337) =
  let tup_el_11 = toErl 337
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 336)
  , (weakGeq c_1 (toErl 0)) && (weakLeq c_1 (toErl 9)) =
  let    arg_5 = toErl 336
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 150
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), (ErlangCons c_1 ics_2),
                   line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 336)
  , weakGeq c_1 (toErl 11) =
  let    arg_5 = toErl 336
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 150
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 336) =
  let    tup_el_4 = toErl 150
  in let tup_el_8 = toErl 336
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 335)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 331
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 335) =
  let tup_el_11 = toErl 335
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 334)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 330
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 334) =
  let tup_el_11 = toErl 334
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 333)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 337
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 333) =
  let tup_el_11 = toErl 333
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 332)
  , (ErlangInt num_1) == (toErl 59) =
  let    arg_5 = toErl 336
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 332) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 332
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 331) =
  let tup_el_4 = toErl 18
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 330)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 326
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 330) =
  let tup_el_11 = toErl 330
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 329) =
  let tup_el_4 = toErl 7
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 328) =
  let tup_el_4 = toErl 9
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 327)
  , (ErlangInt num_1) == (toErl 86) =
  let    arg_7 = toErl 323
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 327) =
  let tup_el_11 = toErl 327
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 326)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 322
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 326) =
  let tup_el_11 = toErl 326
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 325)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 329
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 325) =
  let tup_el_11 = toErl 325
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 324)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 328
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 324) =
  let tup_el_11 = toErl 324
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 323)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 319
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 323) =
  let tup_el_11 = toErl 323
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 322)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 318
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 322) =
  let tup_el_11 = toErl 322
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 321) =
  let tup_el_4 = toErl 55
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 320)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 324
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 320) =
  let tup_el_11 = toErl 320
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 319)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 315
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 319) =
  let tup_el_11 = toErl 319
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 318)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 314
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 318) =
  let tup_el_11 = toErl 318
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 317)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 321
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 317) =
  let tup_el_11 = toErl 317
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 316) =
  let tup_el_4 = toErl 25
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 315)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 311
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 315) =
  let tup_el_11 = toErl 315
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 314)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 310
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 314) =
  let tup_el_11 = toErl 314
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 313)
  , (ErlangInt num_1) == (toErl 90) =
  let    arg_7 = toErl 317
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 313) =
  let tup_el_11 = toErl 313
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 312)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 316
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 312) =
  let tup_el_11 = toErl 312
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 311)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 307
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 311) =
  let tup_el_11 = toErl 311
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 310) =
  let tup_el_4 = toErl 42
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 309) =
  let tup_el_4 = toErl 49
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 308)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 312
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 308) =
  let tup_el_11 = toErl 308
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 307) =
  let tup_el_4 = toErl 134
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 87) =
  let    arg_5 = toErl 302
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_5 = toErl 226
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_5 = toErl 198
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_5 = toErl 154
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_5 = toErl 134
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_5 = toErl 122
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_5 = toErl 102
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 72) =
  let    arg_5 = toErl 66
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 71) =
  let    arg_5 = toErl 54
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 306)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_5 = toErl 46
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 306) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 306
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 305)
  , (ErlangInt num_1) == (toErl 56) =
  let    arg_5 = toErl 309
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 48
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 305) =
  let    tup_el_4 = toErl 48
  in let tup_el_8 = toErl 305
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 304)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 308
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 304) =
  let tup_el_11 = toErl 304
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 303)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_5 = toErl 299
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 303)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_5 = toErl 295
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 303) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 303
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 302)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 298
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 302) =
  let tup_el_11 = toErl 302
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 301)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 305
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 301) =
  let tup_el_11 = toErl 301
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 300)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_5 = toErl 304
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 2
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 300)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_5 = toErl 320
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 2
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 300) =
  let    tup_el_4 = toErl 2
  in let tup_el_8 = toErl 300
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 299) =
  let tup_el_4 = toErl 14
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 298)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 294
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 298) =
  let tup_el_11 = toErl 298
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 297)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 301
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 297) =
  let tup_el_11 = toErl 297
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 296)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 300
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 296) =
  let tup_el_11 = toErl 296
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 295)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 291
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 295) =
  let tup_el_11 = toErl 295
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 57) =
  let    arg_7 = toErl 290
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 56) =
  let    arg_7 = toErl 286
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 55) =
  let    arg_7 = toErl 282
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 54) =
  let    arg_7 = toErl 278
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 53) =
  let    arg_7 = toErl 274
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_7 = toErl 270
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_7 = toErl 266
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_7 = toErl 262
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 294)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_7 = toErl 258
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 294) =
  let tup_el_11 = toErl 294
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 293)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 297
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 293) =
  let tup_el_11 = toErl 293
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 292) =
  let tup_el_4 = toErl 19
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 291)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_5 = toErl 287
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 56
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 291)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_5 = toErl 267
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 56
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 291) =
  let    tup_el_4 = toErl 56
  in let tup_el_8 = toErl 291
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 290) =
  let tup_el_4 = toErl 114
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 289)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 293
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 289)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 313
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 289) =
  let tup_el_11 = toErl 289
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 288)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 292
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 288) =
  let tup_el_11 = toErl 288
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 287)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 283
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 287) =
  let tup_el_11 = toErl 287
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 286) =
  let tup_el_4 = toErl 113
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 285) =
  let tup_el_4 = toErl 10
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 284)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_5 = toErl 288
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 284)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_5 = toErl 296
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 284) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 284
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 283)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 279
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 283) =
  let tup_el_11 = toErl 283
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 282) =
  let tup_el_4 = toErl 112
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 281)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 285
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 281) =
  let tup_el_11 = toErl 281
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 280) =
  let tup_el_4 = toErl 26
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 279)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 275
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 279) =
  let tup_el_11 = toErl 279
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 278) =
  let tup_el_4 = toErl 111
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 277)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 281
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 277) =
  let tup_el_11 = toErl 277
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 276)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 280
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 276) =
  let tup_el_11 = toErl 276
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 275)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 271
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 275) =
  let tup_el_11 = toErl 275
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 274) =
  let tup_el_4 = toErl 110
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 273)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_5 = toErl 277
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 3
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 273) =
  let    tup_el_4 = toErl 3
  in let tup_el_8 = toErl 273
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 272)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 276
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 272) =
  let tup_el_11 = toErl 272
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 271) =
  let tup_el_4 = toErl 35
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 270) =
  let tup_el_4 = toErl 109
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 269)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 273
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 269) =
  let tup_el_11 = toErl 269
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 268)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 272
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 268) =
  let tup_el_11 = toErl 268
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 267)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 263
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 267) =
  let tup_el_11 = toErl 267
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 266) =
  let tup_el_4 = toErl 108
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 265)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_5 = toErl 269
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 265)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_5 = toErl 289
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 265)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_5 = toErl 325
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 265)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_5 = toErl 333
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 265) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 265
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 264)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 268
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 264) =
  let tup_el_11 = toErl 264
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 263)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 259
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 263) =
  let tup_el_11 = toErl 263
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 262) =
  let tup_el_4 = toErl 107
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 261) =
  let tup_el_4 = toErl 22
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 260)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 264
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 260) =
  let tup_el_11 = toErl 260
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 259)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 255
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 259) =
  let tup_el_11 = toErl 259
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 258)
  , (ErlangInt num_1) == (toErl 54) =
  let    arg_5 = toErl 254
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 106
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 258)
  , (ErlangInt num_1) == (toErl 53) =
  let    arg_5 = toErl 250
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 106
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 258)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_5 = toErl 246
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 106
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 258)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_5 = toErl 242
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 106
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 258)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_5 = toErl 238
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 106
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 258)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_5 = toErl 234
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 106
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 258)
  , (ErlangInt num_1) == (toErl 48) =
  let    arg_5 = toErl 230
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 106
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 258) =
  let    tup_el_4 = toErl 106
  in let tup_el_8 = toErl 258
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 257)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 261
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 257) =
  let tup_el_11 = toErl 257
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 256) =
  let tup_el_4 = toErl 40
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 255)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 251
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 255) =
  let tup_el_11 = toErl 255
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 254) =
  let tup_el_4 = toErl 121
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 253) =
  let tup_el_4 = toErl 43
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 252)
  , (ErlangInt num_1) == (toErl 72) =
  let    arg_7 = toErl 256
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 252) =
  let tup_el_11 = toErl 252
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 251) =
  let tup_el_4 = toErl 45
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 250) =
  let tup_el_4 = toErl 120
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 249)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 253
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 249) =
  let tup_el_11 = toErl 249
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 248)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 252
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 248) =
  let tup_el_11 = toErl 248
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 247)
  , (ErlangInt num_1) == (toErl 88) =
  let    arg_5 = toErl 243
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 247)
  , (ErlangInt num_1) == (toErl 81) =
  let    arg_5 = toErl 183
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 247) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 247
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 246) =
  let tup_el_4 = toErl 119
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 245)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 249
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 245) =
  let tup_el_11 = toErl 245
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 244)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 248
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 244) =
  let tup_el_11 = toErl 244
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 243)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 239
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 243)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 187
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 243) =
  let tup_el_11 = toErl 243
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 242) =
  let tup_el_4 = toErl 118
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 241)
  , (ErlangInt num_1) == (toErl 66) =
  let    arg_7 = toErl 245
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 241) =
  let tup_el_11 = toErl 241
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 240)
  , (ErlangInt num_1) == (toErl 72) =
  let    arg_7 = toErl 244
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 240) =
  let tup_el_11 = toErl 240
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 239)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 235
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 239) =
  let tup_el_11 = toErl 239
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 238) =
  let tup_el_4 = toErl 117
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 237)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 241
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 237) =
  let tup_el_11 = toErl 237
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 236)
  , (ErlangInt num_1) == (toErl 75) =
  let    arg_7 = toErl 240
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 236) =
  let tup_el_11 = toErl 236
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 235)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 231
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 235) =
  let tup_el_11 = toErl 235
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 234) =
  let tup_el_4 = toErl 116
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 233)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_5 = toErl 237
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 233)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_5 = toErl 257
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 233) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 233
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 232)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 236
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 232) =
  let tup_el_11 = toErl 232
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 231)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 227
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 231) =
  let tup_el_11 = toErl 231
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 230) =
  let tup_el_4 = toErl 115
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 229) =
  let tup_el_4 = toErl 27
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 228)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 232
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 228) =
  let tup_el_11 = toErl 228
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 227)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 223
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 227) =
  let tup_el_11 = toErl 227
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 226)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 222
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 226)
  , (ErlangInt num_1) == (toErl 66) =
  let    arg_7 = toErl 202
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 226) =
  let tup_el_11 = toErl 226
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 225)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 229
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 225) =
  let tup_el_11 = toErl 225
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 224) =
  let tup_el_4 = toErl 23
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 223)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 219
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 223)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 203
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 223) =
  let tup_el_11 = toErl 223
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 222)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 218
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 222) =
  let tup_el_11 = toErl 222
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 221)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 225
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 221) =
  let tup_el_11 = toErl 221
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 220)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 224
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 220) =
  let tup_el_11 = toErl 220
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 219)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 215
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 219) =
  let tup_el_11 = toErl 219
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 218)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 214
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 218) =
  let tup_el_11 = toErl 218
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 217)
  , (ErlangInt num_1) == (toErl 71) =
  let    arg_7 = toErl 221
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 217) =
  let tup_el_11 = toErl 217
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 216)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 220
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 216) =
  let tup_el_11 = toErl 216
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 215)
  , (ErlangInt num_1) == (toErl 90) =
  let    arg_7 = toErl 211
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 215) =
  let tup_el_11 = toErl 215
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 214)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 210
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 214) =
  let tup_el_11 = toErl 214
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 213)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_5 = toErl 217
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 20
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 213) =
  let    tup_el_4 = toErl 20
  in let tup_el_8 = toErl 213
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 212)
  , (ErlangInt num_1) == (toErl 89) =
  let    arg_5 = toErl 216
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 212)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_5 = toErl 228
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 212)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_5 = toErl 260
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 212) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 212
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 211)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 207
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 211) =
  let tup_el_11 = toErl 211
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 210)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 206
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 210) =
  let tup_el_11 = toErl 210
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 209)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_5 = toErl 213
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 209) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 209
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 208) =
  let tup_el_4 = toErl 129
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 207) =
  let tup_el_4 = toErl 36
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 206) =
  let tup_el_4 = toErl 135
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 205) =
  let tup_el_4 = toErl 54
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 204)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 208
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 204) =
  let tup_el_11 = toErl 204
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 203)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 199
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 203) =
  let tup_el_11 = toErl 203
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 202) =
  let tup_el_4 = toErl 4
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 201) =
  let tup_el_4 = toErl 46
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 200)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 204
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 200) =
  let tup_el_11 = toErl 200
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 199)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 195
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 199) =
  let tup_el_11 = toErl 199
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 198)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 194
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 198)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 186
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 198) =
  let tup_el_11 = toErl 198
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 197)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 201
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 197) =
  let tup_el_11 = toErl 197
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 196)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 200
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 196) =
  let tup_el_11 = toErl 196
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 195)
  , (ErlangInt num_1) == (toErl 89) =
  let    arg_7 = toErl 191
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 195) =
  let tup_el_11 = toErl 195
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 194)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 190
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 194) =
  let tup_el_11 = toErl 194
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 193) =
  let tup_el_4 = toErl 67
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 192) =
  let tup_el_4 = toErl 32
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 191) =
  let tup_el_4 = toErl 37
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 190) =
  let tup_el_4 = toErl 1
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 189) =
  let tup_el_4 = toErl 68
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 188)
  , (ErlangInt num_1) == (toErl 89) =
  let    arg_7 = toErl 192
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 188) =
  let tup_el_11 = toErl 188
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 187) =
  let tup_el_4 = toErl 11
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 186)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 182
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 186) =
  let tup_el_11 = toErl 186
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 185) =
  let tup_el_4 = toErl 69
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 184)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 188
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 184) =
  let tup_el_11 = toErl 184
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 183) =
  let tup_el_4 = toErl 17
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 182)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 178
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 182) =
  let tup_el_11 = toErl 182
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 181) =
  let tup_el_4 = toErl 70
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 180)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 184
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 180) =
  let tup_el_11 = toErl 180
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 179)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_5 = toErl 175
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 179)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_5 = toErl 103
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 179)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_5 = toErl 63
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 179) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 179
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 178)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 174
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 178) =
  let tup_el_11 = toErl 178
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 177) =
  let tup_el_4 = toErl 71
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 176) =
  let tup_el_4 = toErl 30
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 175)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 171
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 175) =
  let tup_el_11 = toErl 175
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 174)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 170
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 174) =
  let tup_el_11 = toErl 174
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 173) =
  let tup_el_4 = toErl 72
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 172)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 176
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 172) =
  let tup_el_11 = toErl 172
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 57) =
  let    arg_7 = toErl 167
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 56) =
  let    arg_7 = toErl 163
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 55) =
  let    arg_7 = toErl 159
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 54) =
  let    arg_7 = toErl 155
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 53) =
  let    arg_7 = toErl 151
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_7 = toErl 147
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_7 = toErl 143
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_7 = toErl 139
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 171)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_7 = toErl 135
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 171) =
  let tup_el_11 = toErl 171
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 170)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 166
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 170) =
  let tup_el_11 = toErl 170
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 169) =
  let tup_el_4 = toErl 73
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 168)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 172
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 168) =
  let tup_el_11 = toErl 168
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 167) =
  let tup_el_4 = toErl 98
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 166)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 162
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 166) =
  let tup_el_11 = toErl 166
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 165) =
  let tup_el_4 = toErl 74
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 164)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 168
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 164) =
  let tup_el_11 = toErl 164
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 163) =
  let tup_el_4 = toErl 97
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 162)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 158
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 162) =
  let tup_el_11 = toErl 162
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 161) =
  let tup_el_4 = toErl 75
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 160) =
  let tup_el_4 = toErl 31
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 159) =
  let tup_el_4 = toErl 96
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 158) =
  let tup_el_4 = toErl 132
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 157) =
  let tup_el_4 = toErl 76
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 156)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 160
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 156) =
  let tup_el_11 = toErl 156
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 155) =
  let tup_el_4 = toErl 95
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 154)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 150
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 154) =
  let tup_el_11 = toErl 154
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 57) =
  let    arg_5 = toErl 157
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 56) =
  let    arg_5 = toErl 161
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 55) =
  let    arg_5 = toErl 165
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 54) =
  let    arg_5 = toErl 169
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 53) =
  let    arg_5 = toErl 173
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_5 = toErl 177
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_5 = toErl 181
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_5 = toErl 185
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_5 = toErl 189
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 153)
  , (ErlangInt num_1) == (toErl 48) =
  let    arg_5 = toErl 193
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 58
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 153) =
  let    tup_el_4 = toErl 58
  in let tup_el_8 = toErl 153
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 152)
  , (ErlangInt num_1) == (toErl 90) =
  let    arg_7 = toErl 156
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 152) =
  let tup_el_11 = toErl 152
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 151) =
  let tup_el_4 = toErl 94
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 150)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 146
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 150) =
  let tup_el_11 = toErl 150
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 149) =
  let tup_el_4 = toErl 77
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 148)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 152
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 148) =
  let tup_el_11 = toErl 148
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 147) =
  let tup_el_4 = toErl 93
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 146)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 142
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 146) =
  let tup_el_11 = toErl 146
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 145) =
  let tup_el_4 = toErl 78
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 144)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 148
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 144)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 164
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 144)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 180
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 144) =
  let tup_el_11 = toErl 144
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 143) =
  let tup_el_4 = toErl 92
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 142)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 138
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 142) =
  let tup_el_11 = toErl 142
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 141) =
  let tup_el_4 = toErl 79
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 140)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 144
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 140) =
  let tup_el_11 = toErl 140
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 139) =
  let tup_el_4 = toErl 91
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 138) =
  let tup_el_4 = toErl 51
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 137) =
  let tup_el_4 = toErl 80
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 136)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 140
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 136) =
  let tup_el_11 = toErl 136
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 135)
  , (ErlangInt num_1) == (toErl 54) =
  let    arg_5 = toErl 131
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 90
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 135)
  , (ErlangInt num_1) == (toErl 53) =
  let    arg_5 = toErl 127
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 90
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 135)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_5 = toErl 123
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 90
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 135)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_5 = toErl 119
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 90
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 135)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_5 = toErl 115
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 90
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 135)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_5 = toErl 111
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 90
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 135)
  , (ErlangInt num_1) == (toErl 48) =
  let    arg_5 = toErl 107
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 90
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 135) =
  let    tup_el_4 = toErl 90
  in let tup_el_8 = toErl 135
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 134)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 130
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 134) =
  let tup_el_11 = toErl 134
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 133) =
  let tup_el_4 = toErl 81
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 132)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 136
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 132) =
  let tup_el_11 = toErl 132
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 131) =
  let tup_el_4 = toErl 105
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 130)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 126
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 130) =
  let tup_el_11 = toErl 130
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 129) =
  let tup_el_4 = toErl 82
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 128) =
  let tup_el_4 = toErl 28
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 127) =
  let tup_el_4 = toErl 104
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 126) =
  let tup_el_4 = toErl 8
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 125) =
  let tup_el_4 = toErl 83
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 124)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 128
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 124) =
  let tup_el_11 = toErl 124
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 123) =
  let tup_el_4 = toErl 103
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 122)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 118
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 122)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 114
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 122) =
  let tup_el_11 = toErl 122
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 121) =
  let tup_el_4 = toErl 84
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 120) =
  let tup_el_4 = toErl 29
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 119) =
  let tup_el_4 = toErl 102
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 118) =
  let tup_el_4 = toErl 15
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 117) =
  let tup_el_4 = toErl 85
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 116)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 120
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 116) =
  let tup_el_11 = toErl 116
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 115) =
  let tup_el_4 = toErl 101
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 114)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 110
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 114) =
  let tup_el_11 = toErl 114
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 113) =
  let tup_el_4 = toErl 86
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 112)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_7 = toErl 116
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 112) =
  let tup_el_11 = toErl 112
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 111) =
  let tup_el_4 = toErl 100
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 110)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 106
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 110) =
  let tup_el_11 = toErl 110
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 57) =
  let    arg_5 = toErl 113
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 56) =
  let    arg_5 = toErl 117
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 55) =
  let    arg_5 = toErl 121
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 54) =
  let    arg_5 = toErl 125
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 53) =
  let    arg_5 = toErl 129
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_5 = toErl 133
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_5 = toErl 137
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_5 = toErl 141
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_5 = toErl 145
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 109)
  , (ErlangInt num_1) == (toErl 48) =
  let    arg_5 = toErl 149
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 59
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 109) =
  let    tup_el_4 = toErl 59
  in let tup_el_8 = toErl 109
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 108)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 112
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 108) =
  let tup_el_11 = toErl 108
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 107) =
  let tup_el_4 = toErl 99
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 106) =
  let tup_el_4 = toErl 50
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 105) =
  let tup_el_4 = toErl 87
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 104)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 108
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 104) =
  let tup_el_11 = toErl 104
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 103)
  , (ErlangInt num_1) == (toErl 86) =
  let    arg_7 = toErl 99
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 103)
  , (ErlangInt num_1) == (toErl 70) =
  let    arg_7 = toErl 95
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 103) =
  let tup_el_11 = toErl 103
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 102)
  , (ErlangInt num_1) == (toErl 71) =
  let    arg_7 = toErl 98
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 102) =
  let tup_el_11 = toErl 102
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 101) =
  let tup_el_4 = toErl 88
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 100)
  , (ErlangInt num_1) == (toErl 86) =
  let    arg_5 = toErl 104
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 128
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 100)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_5 = toErl 124
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 128
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 100)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_5 = toErl 132
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 128
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 100)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_5 = toErl 196
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 128
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 100) =
  let    tup_el_4 = toErl 128
  in let tup_el_8 = toErl 100
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 99) =
  let tup_el_4 = toErl 5
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 98)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 94
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 98) =
  let tup_el_11 = toErl 98
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 97) =
  let tup_el_4 = toErl 89
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 96)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 100
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 96) =
  let tup_el_11 = toErl 96
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 95)
  , (ErlangInt num_1) == (toErl 70) =
  let    arg_7 = toErl 91
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 95) =
  let tup_el_11 = toErl 95
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 94)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 90
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 94) =
  let tup_el_11 = toErl 94
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 93)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_5 = toErl 97
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 60
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 93)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_5 = toErl 101
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 60
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 93)
  , (ErlangInt num_1) == (toErl 48) =
  let    arg_5 = toErl 105
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 60
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 93) =
  let    tup_el_4 = toErl 60
  in let tup_el_8 = toErl 93
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 92)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 96
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 92) =
  let tup_el_11 = toErl 92
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 91)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 87
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 91) =
  let tup_el_11 = toErl 91
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 90)
  , (ErlangInt num_1) == (toErl 88) =
  let    arg_7 = toErl 86
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 90) =
  let tup_el_11 = toErl 90
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 89) =
  let tup_el_4 = toErl 61
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 88) =
  let tup_el_4 = toErl 34
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 87)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 83
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 87) =
  let tup_el_11 = toErl 87
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 86)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 82
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 86) =
  let tup_el_11 = toErl 86
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 85) =
  let tup_el_4 = toErl 62
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 84)
  , (ErlangInt num_1) == (toErl 89) =
  let    arg_7 = toErl 88
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 84) =
  let tup_el_11 = toErl 84
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 83)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_7 = toErl 79
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 83) =
  let tup_el_11 = toErl 83
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 82)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 78
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 82) =
  let tup_el_11 = toErl 82
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 81) =
  let tup_el_4 = toErl 63
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 80)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 84
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 80) =
  let tup_el_11 = toErl 80
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 79)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 75
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 79) =
  let tup_el_11 = toErl 79
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 78)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 74
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 78) =
  let tup_el_11 = toErl 78
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 77) =
  let tup_el_4 = toErl 64
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 76)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 80
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 76) =
  let tup_el_11 = toErl 76
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 75)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 71
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 75) =
  let tup_el_11 = toErl 75
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 74)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 70
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 74) =
  let tup_el_11 = toErl 74
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 73) =
  let tup_el_4 = toErl 65
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 72) =
  let tup_el_4 = toErl 33
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 71)
  , (ErlangInt num_1) == (toErl 89) =
  let    arg_7 = toErl 67
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 71) =
  let tup_el_11 = toErl 71
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 70) =
  let tup_el_4 = toErl 12
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 69) =
  let tup_el_4 = toErl 66
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 68)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 72
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 68) =
  let tup_el_11 = toErl 68
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 67) =
  let tup_el_4 = toErl 44
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 66)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 62
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 66) =
  let tup_el_11 = toErl 66
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 57) =
  let    arg_7 = toErl 69
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 56) =
  let    arg_7 = toErl 73
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 55) =
  let    arg_7 = toErl 77
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 54) =
  let    arg_7 = toErl 81
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 53) =
  let    arg_7 = toErl 85
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 52) =
  let    arg_7 = toErl 89
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_7 = toErl 93
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 50) =
  let    arg_7 = toErl 109
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 65)
  , (ErlangInt num_1) == (toErl 49) =
  let    arg_7 = toErl 153
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 65) =
  let tup_el_11 = toErl 65
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 64)
  , (ErlangInt num_1) == (toErl 90) =
  let    arg_7 = toErl 68
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 64) =
  let tup_el_11 = toErl 64
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 63)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 59
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 63) =
  let tup_el_11 = toErl 63
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 62)
  , (ErlangInt num_1) == (toErl 51) =
  let    arg_7 = toErl 58
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 62) =
  let tup_el_11 = toErl 62
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 61)
  , (ErlangInt num_1) == (toErl 72) =
  let    arg_7 = toErl 65
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 61) =
  let tup_el_11 = toErl 61
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 60)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 64
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 60) =
  let tup_el_11 = toErl 60
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 59)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 55
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 59) =
  let tup_el_11 = toErl 59
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 58) =
  let tup_el_4 = toErl 24
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 57)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 61
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 57) =
  let tup_el_11 = toErl 57
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 56)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 60
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 56)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 76
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 56) =
  let tup_el_11 = toErl 56
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 55)
  , (ErlangInt num_1) == (toErl 71) =
  let    arg_7 = toErl 51
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 55) =
  let tup_el_11 = toErl 55
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 54)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 50
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 54) =
  let tup_el_11 = toErl 54
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 53)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_5 = toErl 57
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 53)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_5 = toErl 197
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 53)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_5 = toErl 205
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 53) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 53
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 52)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 56
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 52) =
  let tup_el_11 = toErl 52
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 51)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 47
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 51) =
  let tup_el_11 = toErl 51
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 50) =
  let tup_el_4 = toErl 16
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 49) =
  let tup_el_4 = toErl 39
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 48) =
  let tup_el_4 = toErl 41
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 47)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 43
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 47) =
  let tup_el_11 = toErl 47
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 46)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 42
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 46) =
  let tup_el_11 = toErl 46
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 45)
  , (ErlangInt num_1) == (toErl 89) =
  let    arg_7 = toErl 49
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 45) =
  let tup_el_11 = toErl 45
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 44)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 48
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 44) =
  let tup_el_11 = toErl 44
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 43)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 39
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 43) =
  let tup_el_11 = toErl 43
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 42)
  , (ErlangInt num_1) == (toErl 86) =
  let    arg_7 = toErl 38
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 42) =
  let tup_el_11 = toErl 42
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 41)
  , (ErlangInt num_1) == (toErl 80) =
  let    arg_7 = toErl 45
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 41) =
  let tup_el_11 = toErl 41
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 40)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 44
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 40) =
  let tup_el_11 = toErl 40
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 39)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 35
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 39) =
  let tup_el_11 = toErl 39
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 38) =
  let tup_el_4 = toErl 6
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 37)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_7 = toErl 41
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 37) =
  let tup_el_11 = toErl 37
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 36)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 40
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 36) =
  let tup_el_11 = toErl 36
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 35)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 31
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 35) =
  let tup_el_11 = toErl 35
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 34)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_5 = toErl 30
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 34) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 34
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 33) =
  let tup_el_4 = toErl 38
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 32)
  , (ErlangInt num_1) == (toErl 66) =
  let    arg_7 = toErl 36
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 32) =
  let tup_el_11 = toErl 32
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 31)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 27
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 31) =
  let tup_el_11 = toErl 31
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 30)
  , (ErlangInt num_1) == (toErl 86) =
  let    arg_7 = toErl 26
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 30)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 10
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 30) =
  let tup_el_11 = toErl 30
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 29)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 33
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 29) =
  let tup_el_11 = toErl 29
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 28)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 32
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 28) =
  let tup_el_11 = toErl 28
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 27)
  , (ErlangInt num_1) == (toErl 76) =
  let    arg_7 = toErl 23
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 27) =
  let tup_el_11 = toErl 27
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 26)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 22
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 26) =
  let tup_el_11 = toErl 26
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 25)
  , (ErlangInt num_1) == (toErl 90) =
  let    arg_7 = toErl 29
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 25) =
  let tup_el_11 = toErl 25
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 24) =
  let tup_el_4 = toErl 136
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 23) =
  let tup_el_4 = toErl 131
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 22)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 18
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 22) =
  let tup_el_11 = toErl 22
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 21)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 25
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 21) =
  let tup_el_11 = toErl 21
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 20)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 24
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 20) =
  let tup_el_11 = toErl 20
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 19)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_5 = toErl 15
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 19)
  , (ErlangInt num_1) == (toErl 79) =
  let    arg_5 = toErl 4
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 19)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_5 = toErl 92
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 151
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 19) =
  let    tup_el_4 = toErl 151
  in let tup_el_8 = toErl 19
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 18)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 14
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 18) =
  let tup_el_11 = toErl 18
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 17)
  , (ErlangInt num_1) == (toErl 83) =
  let    arg_7 = toErl 21
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 17)
  , (ErlangInt num_1) == (toErl 67) =
  let    arg_7 = toErl 37
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 17) =
  let tup_el_11 = toErl 17
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 16)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 20
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 16) =
  let tup_el_11 = toErl 16
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 15)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 11
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 15) =
  let tup_el_11 = toErl 15
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 14) =
  let tup_el_4 = toErl 133
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 13)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 17
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 13) =
  let tup_el_11 = toErl 13
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 12)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 16
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 12) =
  let tup_el_11 = toErl 12
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 11)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 7
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 11) =
  let tup_el_11 = toErl 11
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 10)
  , (ErlangInt num_1) == (toErl 85) =
  let    arg_7 = toErl 6
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 10) =
  let tup_el_11 = toErl 10
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 9)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 13
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 9) =
  let tup_el_11 = toErl 9
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 8)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 12
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 8) =
  let tup_el_11 = toErl 8
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 7)
  , (ErlangInt num_1) == (toErl 84) =
  let    arg_7 = toErl 3
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 7) =
  let tup_el_11 = toErl 7
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 6)
  , (ErlangInt num_1) == (toErl 82) =
  let    arg_7 = toErl 2
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 6) =
  let tup_el_11 = toErl 6
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 5)
  , (ErlangInt num_1) == (toErl 65) =
  let    arg_7 = toErl 9
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 5) =
  let tup_el_11 = toErl 5
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 4)
  , (ErlangInt num_1) == (toErl 77) =
  let    arg_7 = toErl 8
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 4)
  , (ErlangInt num_1) == (toErl 73) =
  let    arg_7 = toErl 28
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 4)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_7 = toErl 52
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 4) =
  let tup_el_11 = toErl 4
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 3)
  , (ErlangInt num_1) == (toErl 69) =
  let    arg_7 = toErl 0
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 3) =
  let tup_el_11 = toErl 3
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4,
                   action_5, alen_6]
  | (ErlangInt num_0) == (toErl 2)
  , (ErlangInt num_1) == (toErl 78) =
  let    arg_7 = toErl 1
  in let rop_12 = toErl 1
  in let arg_10 = BIF.erlang__op_plus [tlen_4, rop_12]
  in
    erlps__yystate__6
      [arg_7, ics_2, line_3, arg_10, action_5, alen_6]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3,
                   action_4, alen_5]
  | (ErlangInt num_0) == (toErl 2) =
  let tup_el_11 = toErl 2
  in
    ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, tup_el_11]
erlps__yystate__6 [(ErlangInt num_0),
                   (ErlangCons (ErlangInt num_1) ics_2), line_3, tlen_4, _, _]
  | (ErlangInt num_0) == (toErl 1)
  , (ErlangInt num_1) == (toErl 68) =
  let    arg_5 = toErl 5
  in let rop_10 = toErl 1
  in let arg_8 = BIF.erlang__op_plus [tlen_4, rop_10]
  in let arg_11 = toErl 130
  in
    erlps__yystate__6 [arg_5, ics_2, line_3, arg_8, arg_11, tlen_4]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 1) =
  let    tup_el_4 = toErl 130
  in let tup_el_8 = toErl 1
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2, tup_el_8]
erlps__yystate__6 [(ErlangInt num_0), ics_1, line_2, tlen_3, _,
                   _]
  | (ErlangInt num_0) == (toErl 0) =
  let tup_el_4 = toErl 127
  in ErlangTuple [tup_el_4, tlen_3, ics_1, line_2]
erlps__yystate__6 [s_0, ics_1, line_2, tlen_3, action_4, alen_5]
  =
  ErlangTuple [action_4, alen_5, tlen_3, ics_1, line_2, s_0]
erlps__yystate__6 [arg_12, arg_13, arg_14, arg_15, arg_16,
                   arg_17]
  =
  EXC.function_clause unit
erlps__yystate__6 args =
  EXC.badarity (ErlangFun 6 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction__4 :: ErlangFun
erlps__yyaction__4 [(ErlangInt num_0), tokenlen_1, yytcs_2,
                    tokenline_3]
  | (ErlangInt num_0) == (toErl 0) =
  let tokenchars_6 = erlps__yypre__2 [yytcs_2, tokenlen_1]
  in erlps__yyaction_0__2 [tokenchars_6, tokenline_3]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 1) =
  erlps__yyaction_1__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 2) =
  erlps__yyaction_2__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 3) =
  erlps__yyaction_3__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 4) =
  erlps__yyaction_4__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 5) =
  erlps__yyaction_5__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 6) =
  erlps__yyaction_6__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 7) =
  erlps__yyaction_7__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 8) =
  erlps__yyaction_8__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 9) =
  erlps__yyaction_9__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 10) =
  erlps__yyaction_10__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 11) =
  erlps__yyaction_11__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 12) =
  erlps__yyaction_12__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 13) =
  erlps__yyaction_13__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 14) =
  erlps__yyaction_14__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 15) =
  erlps__yyaction_15__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 16) =
  erlps__yyaction_16__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 17) =
  erlps__yyaction_17__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 18) =
  erlps__yyaction_18__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 19) =
  erlps__yyaction_19__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 20) =
  erlps__yyaction_20__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 21) =
  erlps__yyaction_21__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 22) =
  erlps__yyaction_22__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 23) =
  erlps__yyaction_23__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 24) =
  erlps__yyaction_24__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 25) =
  erlps__yyaction_25__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 26) =
  erlps__yyaction_26__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 27) =
  erlps__yyaction_27__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 28) =
  erlps__yyaction_28__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 29) =
  erlps__yyaction_29__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 30) =
  erlps__yyaction_30__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 31) =
  erlps__yyaction_31__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 32) =
  erlps__yyaction_32__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 33) =
  erlps__yyaction_33__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 34) =
  erlps__yyaction_34__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 35) =
  erlps__yyaction_35__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 36) =
  erlps__yyaction_36__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 37) =
  erlps__yyaction_37__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 38) =
  erlps__yyaction_38__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 39) =
  erlps__yyaction_39__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 40) =
  erlps__yyaction_40__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 41) =
  erlps__yyaction_41__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 42) =
  erlps__yyaction_42__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 43) =
  erlps__yyaction_43__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 44) =
  erlps__yyaction_44__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 45) =
  erlps__yyaction_45__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 46) =
  erlps__yyaction_46__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 47) =
  erlps__yyaction_47__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 48) =
  erlps__yyaction_48__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 49) =
  erlps__yyaction_49__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 50) =
  erlps__yyaction_50__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 51) =
  erlps__yyaction_51__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 52) =
  erlps__yyaction_52__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 53) =
  erlps__yyaction_53__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 54) =
  erlps__yyaction_54__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 55) =
  erlps__yyaction_55__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 56) =
  erlps__yyaction_56__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 57) =
  erlps__yyaction_57__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 58) =
  erlps__yyaction_58__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 59) =
  erlps__yyaction_59__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 60) =
  erlps__yyaction_60__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 61) =
  erlps__yyaction_61__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 62) =
  erlps__yyaction_62__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 63) =
  erlps__yyaction_63__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 64) =
  erlps__yyaction_64__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 65) =
  erlps__yyaction_65__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 66) =
  erlps__yyaction_66__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 67) =
  erlps__yyaction_67__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 68) =
  erlps__yyaction_68__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 69) =
  erlps__yyaction_69__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 70) =
  erlps__yyaction_70__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 71) =
  erlps__yyaction_71__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 72) =
  erlps__yyaction_72__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 73) =
  erlps__yyaction_73__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 74) =
  erlps__yyaction_74__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 75) =
  erlps__yyaction_75__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 76) =
  erlps__yyaction_76__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 77) =
  erlps__yyaction_77__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 78) =
  erlps__yyaction_78__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 79) =
  erlps__yyaction_79__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 80) =
  erlps__yyaction_80__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 81) =
  erlps__yyaction_81__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 82) =
  erlps__yyaction_82__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 83) =
  erlps__yyaction_83__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 84) =
  erlps__yyaction_84__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 85) =
  erlps__yyaction_85__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 86) =
  erlps__yyaction_86__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 87) =
  erlps__yyaction_87__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 88) =
  erlps__yyaction_88__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 89) =
  erlps__yyaction_89__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 90) =
  erlps__yyaction_90__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 91) =
  erlps__yyaction_91__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 92) =
  erlps__yyaction_92__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 93) =
  erlps__yyaction_93__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 94) =
  erlps__yyaction_94__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 95) =
  erlps__yyaction_95__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 96) =
  erlps__yyaction_96__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 97) =
  erlps__yyaction_97__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 98) =
  erlps__yyaction_98__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 99) =
  erlps__yyaction_99__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 100) =
  erlps__yyaction_100__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 101) =
  erlps__yyaction_101__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 102) =
  erlps__yyaction_102__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 103) =
  erlps__yyaction_103__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 104) =
  erlps__yyaction_104__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 105) =
  erlps__yyaction_105__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 106) =
  erlps__yyaction_106__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 107) =
  erlps__yyaction_107__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 108) =
  erlps__yyaction_108__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 109) =
  erlps__yyaction_109__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 110) =
  erlps__yyaction_110__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 111) =
  erlps__yyaction_111__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 112) =
  erlps__yyaction_112__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 113) =
  erlps__yyaction_113__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 114) =
  erlps__yyaction_114__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 115) =
  erlps__yyaction_115__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 116) =
  erlps__yyaction_116__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 117) =
  erlps__yyaction_117__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 118) =
  erlps__yyaction_118__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 119) =
  erlps__yyaction_119__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 120) =
  erlps__yyaction_120__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 121) =
  erlps__yyaction_121__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 122) =
  erlps__yyaction_122__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 123) =
  erlps__yyaction_123__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 124) =
  erlps__yyaction_124__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 125) =
  erlps__yyaction_125__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 126) =
  erlps__yyaction_126__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 127) =
  erlps__yyaction_127__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 128) =
  erlps__yyaction_128__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 129) =
  erlps__yyaction_129__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 130) =
  erlps__yyaction_130__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 131) =
  erlps__yyaction_131__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 132) =
  erlps__yyaction_132__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 133) =
  erlps__yyaction_133__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 134) =
  erlps__yyaction_134__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 135) =
  erlps__yyaction_135__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 136) =
  erlps__yyaction_136__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), tokenlen_1, yytcs_2,
                    tokenline_3]
  | (ErlangInt num_0) == (toErl 137) =
  let tokenchars_6 = erlps__yypre__2 [yytcs_2, tokenlen_1]
  in erlps__yyaction_137__2 [tokenchars_6, tokenline_3]
erlps__yyaction__4 [(ErlangInt num_0), tokenlen_1, yytcs_2,
                    tokenline_3]
  | (ErlangInt num_0) == (toErl 138) =
  let tokenchars_6 = erlps__yypre__2 [yytcs_2, tokenlen_1]
  in erlps__yyaction_138__2 [tokenchars_6, tokenline_3]
erlps__yyaction__4 [(ErlangInt num_0), tokenlen_1, yytcs_2,
                    tokenline_3]
  | (ErlangInt num_0) == (toErl 139) =
  let tokenchars_6 = erlps__yypre__2 [yytcs_2, tokenlen_1]
  in erlps__yyaction_139__2 [tokenchars_6, tokenline_3]
erlps__yyaction__4 [(ErlangInt num_0), tokenlen_1, yytcs_2,
                    tokenline_3]
  | (ErlangInt num_0) == (toErl 140) =
  let tokenchars_6 = erlps__yypre__2 [yytcs_2, tokenlen_1]
  in erlps__yyaction_140__2 [tokenchars_6, tokenline_3]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 141) =
  erlps__yyaction_141__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 142) =
  erlps__yyaction_142__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 143) =
  erlps__yyaction_143__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 144) =
  erlps__yyaction_144__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 145) =
  erlps__yyaction_145__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 146) =
  erlps__yyaction_146__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 147) =
  erlps__yyaction_147__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, tokenline_1]
  | (ErlangInt num_0) == (toErl 148) =
  erlps__yyaction_148__1 [tokenline_1]
erlps__yyaction__4 [(ErlangInt num_0), _, _, _]
  | (ErlangInt num_0) == (toErl 149) =
  erlps__yyaction_149__0 []
erlps__yyaction__4 [(ErlangInt num_0), _, _, _]
  | (ErlangInt num_0) == (toErl 150) =
  erlps__yyaction_150__0 []
erlps__yyaction__4 [(ErlangInt num_0), tokenlen_1, yytcs_2, _]
  | (ErlangInt num_0) == (toErl 151) =
  let tokenchars_5 = erlps__yypre__2 [yytcs_2, tokenlen_1]
  in erlps__yyaction_151__1 [tokenchars_5]
erlps__yyaction__4 [_, _, _, _] = ErlangAtom "error"
erlps__yyaction__4 [arg_0, arg_1, arg_2, arg_3] =
  EXC.function_clause unit
erlps__yyaction__4 args =
  EXC.badarity (ErlangFun 4 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_0__2 :: ErlangFun
erlps__yyaction_0__2 [tokenchars_0, tokenline_1] =
  let    rop_8 = toErl ":"
  in let tup_el_6 = BIF.erlang__op_unAppend [tokenchars_0, rop_8]
  in let
    tup_el_3 =
      ErlangTuple [ErlangAtom "label", tokenline_1, tup_el_6]
  in ErlangTuple [ErlangAtom "token", tup_el_3]
erlps__yyaction_0__2 [arg_9, arg_10] = EXC.function_clause unit
erlps__yyaction_0__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_1__1 :: ErlangFun
erlps__yyaction_1__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "STOP"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_1__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_1__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_2__1 :: ErlangFun
erlps__yyaction_2__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "ADD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_2__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_2__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_3__1 :: ErlangFun
erlps__yyaction_3__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "MUL"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_3__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_3__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_4__1 :: ErlangFun
erlps__yyaction_4__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SUB"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_4__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_4__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_5__1 :: ErlangFun
erlps__yyaction_5__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DIV"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_5__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_5__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_6__1 :: ErlangFun
erlps__yyaction_6__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SDIV"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_6__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_6__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_7__1 :: ErlangFun
erlps__yyaction_7__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "MOD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_7__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_7__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_8__1 :: ErlangFun
erlps__yyaction_8__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SMOD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_8__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_8__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_9__1 :: ErlangFun
erlps__yyaction_9__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "ADDMOD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_9__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_9__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_10__1 :: ErlangFun
erlps__yyaction_10__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "MULMOD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_10__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_10__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_11__1 :: ErlangFun
erlps__yyaction_11__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "EXP"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_11__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_11__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_12__1 :: ErlangFun
erlps__yyaction_12__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SIGNEXTEND"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_12__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_12__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_13__1 :: ErlangFun
erlps__yyaction_13__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "LT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_13__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_13__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_14__1 :: ErlangFun
erlps__yyaction_14__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "GT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_14__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_14__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_15__1 :: ErlangFun
erlps__yyaction_15__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SLT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_15__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_15__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_16__1 :: ErlangFun
erlps__yyaction_16__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SGT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_16__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_16__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_17__1 :: ErlangFun
erlps__yyaction_17__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "EQ"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_17__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_17__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_18__1 :: ErlangFun
erlps__yyaction_18__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "ISZERO"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_18__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_18__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_19__1 :: ErlangFun
erlps__yyaction_19__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "AND"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_19__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_19__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_20__1 :: ErlangFun
erlps__yyaction_20__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "OR"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_20__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_20__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_21__1 :: ErlangFun
erlps__yyaction_21__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "XOR"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_21__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_21__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_22__1 :: ErlangFun
erlps__yyaction_22__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "NOT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_22__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_22__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_23__1 :: ErlangFun
erlps__yyaction_23__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "BYTE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_23__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_23__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_24__1 :: ErlangFun
erlps__yyaction_24__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SHA3"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_24__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_24__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_25__1 :: ErlangFun
erlps__yyaction_25__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "ADDRESS"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_25__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_25__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_26__1 :: ErlangFun
erlps__yyaction_26__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "BALANCE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_26__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_26__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_27__1 :: ErlangFun
erlps__yyaction_27__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "ORIGIN"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_27__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_27__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_28__1 :: ErlangFun
erlps__yyaction_28__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CALLER"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_28__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_28__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_29__1 :: ErlangFun
erlps__yyaction_29__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CALLVALUE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_29__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_29__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_30__1 :: ErlangFun
erlps__yyaction_30__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CALLDATALOAD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_30__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_30__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_31__1 :: ErlangFun
erlps__yyaction_31__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CALLDATASIZE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_31__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_31__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_32__1 :: ErlangFun
erlps__yyaction_32__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CALLDATACOPY"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_32__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_32__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_33__1 :: ErlangFun
erlps__yyaction_33__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CODESIZE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_33__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_33__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_34__1 :: ErlangFun
erlps__yyaction_34__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CODECOPY"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_34__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_34__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_35__1 :: ErlangFun
erlps__yyaction_35__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "GASPRICE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_35__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_35__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_36__1 :: ErlangFun
erlps__yyaction_36__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "EXTCODESIZE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_36__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_36__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_37__1 :: ErlangFun
erlps__yyaction_37__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "EXTCODECOPY"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_37__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_37__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_38__1 :: ErlangFun
erlps__yyaction_38__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "RETURNDATASIZE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_38__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_38__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_39__1 :: ErlangFun
erlps__yyaction_39__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "RETURNDATACOPY"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_39__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_39__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_40__1 :: ErlangFun
erlps__yyaction_40__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "BLOCKHASH"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_40__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_40__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_41__1 :: ErlangFun
erlps__yyaction_41__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "COINBASE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_41__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_41__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_42__1 :: ErlangFun
erlps__yyaction_42__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "TIMESTAMP"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_42__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_42__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_43__1 :: ErlangFun
erlps__yyaction_43__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "NUMBER"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_43__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_43__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_44__1 :: ErlangFun
erlps__yyaction_44__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DIFFICULTY"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_44__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_44__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_45__1 :: ErlangFun
erlps__yyaction_45__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "GASLIMIT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_45__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_45__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_46__1 :: ErlangFun
erlps__yyaction_46__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "POP"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_46__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_46__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_47__1 :: ErlangFun
erlps__yyaction_47__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "MLOAD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_47__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_47__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_48__1 :: ErlangFun
erlps__yyaction_48__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "MSTORE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_48__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_48__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_49__1 :: ErlangFun
erlps__yyaction_49__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "MSTORE8"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_49__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_49__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_50__1 :: ErlangFun
erlps__yyaction_50__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SLOAD"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_50__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_50__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_51__1 :: ErlangFun
erlps__yyaction_51__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SSTORE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_51__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_51__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_52__1 :: ErlangFun
erlps__yyaction_52__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "JUMP"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_52__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_52__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_53__1 :: ErlangFun
erlps__yyaction_53__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "JUMPI"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_53__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_53__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_54__1 :: ErlangFun
erlps__yyaction_54__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PC"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_54__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_54__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_55__1 :: ErlangFun
erlps__yyaction_55__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "MSIZE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_55__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_55__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_56__1 :: ErlangFun
erlps__yyaction_56__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "GAS"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_56__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_56__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_57__1 :: ErlangFun
erlps__yyaction_57__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "JUMPDEST"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_57__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_57__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_58__1 :: ErlangFun
erlps__yyaction_58__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH1"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_58__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_58__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_59__1 :: ErlangFun
erlps__yyaction_59__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH2"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_59__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_59__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_60__1 :: ErlangFun
erlps__yyaction_60__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH3"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_60__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_60__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_61__1 :: ErlangFun
erlps__yyaction_61__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH4"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_61__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_61__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_62__1 :: ErlangFun
erlps__yyaction_62__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH5"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_62__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_62__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_63__1 :: ErlangFun
erlps__yyaction_63__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH6"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_63__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_63__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_64__1 :: ErlangFun
erlps__yyaction_64__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH7"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_64__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_64__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_65__1 :: ErlangFun
erlps__yyaction_65__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH8"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_65__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_65__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_66__1 :: ErlangFun
erlps__yyaction_66__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH9"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_66__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_66__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_67__1 :: ErlangFun
erlps__yyaction_67__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH10"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_67__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_67__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_68__1 :: ErlangFun
erlps__yyaction_68__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH11"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_68__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_68__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_69__1 :: ErlangFun
erlps__yyaction_69__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH12"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_69__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_69__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_70__1 :: ErlangFun
erlps__yyaction_70__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH13"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_70__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_70__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_71__1 :: ErlangFun
erlps__yyaction_71__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH14"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_71__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_71__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_72__1 :: ErlangFun
erlps__yyaction_72__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH15"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_72__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_72__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_73__1 :: ErlangFun
erlps__yyaction_73__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH16"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_73__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_73__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_74__1 :: ErlangFun
erlps__yyaction_74__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH17"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_74__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_74__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_75__1 :: ErlangFun
erlps__yyaction_75__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH18"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_75__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_75__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_76__1 :: ErlangFun
erlps__yyaction_76__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH19"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_76__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_76__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_77__1 :: ErlangFun
erlps__yyaction_77__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH20"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_77__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_77__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_78__1 :: ErlangFun
erlps__yyaction_78__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH21"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_78__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_78__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_79__1 :: ErlangFun
erlps__yyaction_79__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH22"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_79__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_79__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_80__1 :: ErlangFun
erlps__yyaction_80__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH23"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_80__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_80__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_81__1 :: ErlangFun
erlps__yyaction_81__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH24"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_81__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_81__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_82__1 :: ErlangFun
erlps__yyaction_82__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH25"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_82__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_82__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_83__1 :: ErlangFun
erlps__yyaction_83__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH26"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_83__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_83__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_84__1 :: ErlangFun
erlps__yyaction_84__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH27"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_84__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_84__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_85__1 :: ErlangFun
erlps__yyaction_85__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH28"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_85__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_85__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_86__1 :: ErlangFun
erlps__yyaction_86__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH29"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_86__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_86__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_87__1 :: ErlangFun
erlps__yyaction_87__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH30"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_87__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_87__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_88__1 :: ErlangFun
erlps__yyaction_88__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH31"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_88__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_88__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_89__1 :: ErlangFun
erlps__yyaction_89__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "PUSH32"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_89__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_89__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_90__1 :: ErlangFun
erlps__yyaction_90__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP1"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_90__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_90__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_91__1 :: ErlangFun
erlps__yyaction_91__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP2"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_91__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_91__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_92__1 :: ErlangFun
erlps__yyaction_92__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP3"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_92__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_92__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_93__1 :: ErlangFun
erlps__yyaction_93__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP4"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_93__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_93__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_94__1 :: ErlangFun
erlps__yyaction_94__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP5"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_94__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_94__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_95__1 :: ErlangFun
erlps__yyaction_95__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP6"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_95__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_95__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_96__1 :: ErlangFun
erlps__yyaction_96__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP7"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_96__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_96__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_97__1 :: ErlangFun
erlps__yyaction_97__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP8"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_97__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_97__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_98__1 :: ErlangFun
erlps__yyaction_98__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP9"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_98__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_98__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_99__1 :: ErlangFun
erlps__yyaction_99__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP10"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_99__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_99__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_100__1 :: ErlangFun
erlps__yyaction_100__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP11"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_100__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_100__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_101__1 :: ErlangFun
erlps__yyaction_101__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP12"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_101__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_101__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_102__1 :: ErlangFun
erlps__yyaction_102__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP13"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_102__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_102__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_103__1 :: ErlangFun
erlps__yyaction_103__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP14"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_103__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_103__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_104__1 :: ErlangFun
erlps__yyaction_104__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP15"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_104__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_104__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_105__1 :: ErlangFun
erlps__yyaction_105__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DUP16"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_105__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_105__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_106__1 :: ErlangFun
erlps__yyaction_106__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP1"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_106__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_106__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_107__1 :: ErlangFun
erlps__yyaction_107__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP2"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_107__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_107__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_108__1 :: ErlangFun
erlps__yyaction_108__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP3"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_108__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_108__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_109__1 :: ErlangFun
erlps__yyaction_109__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP4"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_109__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_109__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_110__1 :: ErlangFun
erlps__yyaction_110__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP5"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_110__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_110__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_111__1 :: ErlangFun
erlps__yyaction_111__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP6"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_111__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_111__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_112__1 :: ErlangFun
erlps__yyaction_112__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP7"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_112__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_112__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_113__1 :: ErlangFun
erlps__yyaction_113__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP8"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_113__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_113__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_114__1 :: ErlangFun
erlps__yyaction_114__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP9"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_114__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_114__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_115__1 :: ErlangFun
erlps__yyaction_115__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP10"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_115__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_115__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_116__1 :: ErlangFun
erlps__yyaction_116__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP11"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_116__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_116__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_117__1 :: ErlangFun
erlps__yyaction_117__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP12"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_117__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_117__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_118__1 :: ErlangFun
erlps__yyaction_118__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP13"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_118__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_118__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_119__1 :: ErlangFun
erlps__yyaction_119__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP14"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_119__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_119__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_120__1 :: ErlangFun
erlps__yyaction_120__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP15"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_120__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_120__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_121__1 :: ErlangFun
erlps__yyaction_121__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SWAP16"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_121__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_121__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_122__1 :: ErlangFun
erlps__yyaction_122__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "LOG0"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_122__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_122__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_123__1 :: ErlangFun
erlps__yyaction_123__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "LOG1"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_123__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_123__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_124__1 :: ErlangFun
erlps__yyaction_124__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "LOG2"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_124__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_124__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_125__1 :: ErlangFun
erlps__yyaction_125__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "LOG3"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_125__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_125__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_126__1 :: ErlangFun
erlps__yyaction_126__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "LOG4"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_126__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_126__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_127__1 :: ErlangFun
erlps__yyaction_127__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CREATE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_127__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_127__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_128__1 :: ErlangFun
erlps__yyaction_128__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CALL"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_128__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_128__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_129__1 :: ErlangFun
erlps__yyaction_129__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "CALLCODE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_129__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_129__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_130__1 :: ErlangFun
erlps__yyaction_130__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "RETURN"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_130__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_130__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_131__1 :: ErlangFun
erlps__yyaction_131__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "DELEGATECALL"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_131__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_131__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_132__1 :: ErlangFun
erlps__yyaction_132__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "STATICCALL"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_132__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_132__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_133__1 :: ErlangFun
erlps__yyaction_133__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "REVERT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_133__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_133__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_134__1 :: ErlangFun
erlps__yyaction_134__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "INVALID"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_134__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_134__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_135__1 :: ErlangFun
erlps__yyaction_135__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "SUICIDE"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_135__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_135__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_136__1 :: ErlangFun
erlps__yyaction_136__1 [tokenline_0] =
  let
    tup_el_2 =
      ErlangTuple
        [ErlangAtom "mnemonic", tokenline_0, ErlangAtom "COMMENT"]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_136__1 [arg_6] = EXC.function_clause unit
erlps__yyaction_136__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_137__2 :: ErlangFun
erlps__yyaction_137__2 [tokenchars_0, tokenline_1] =
  let
    tup_el_3 =
      ErlangTuple [ErlangAtom "id", tokenline_1, tokenchars_0]
  in ErlangTuple [ErlangAtom "token", tup_el_3]
erlps__yyaction_137__2 [arg_7, arg_8] = EXC.function_clause unit
erlps__yyaction_137__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_138__2 :: ErlangFun
erlps__yyaction_138__2 [tokenchars_0, tokenline_1] =
  let    tup_el_6 = erlps__parse_hex__1 [tokenchars_0]
  in let
    tup_el_3 = ErlangTuple [ErlangAtom "int", tokenline_1, tup_el_6]
  in ErlangTuple [ErlangAtom "token", tup_el_3]
erlps__yyaction_138__2 [arg_8, arg_9] = EXC.function_clause unit
erlps__yyaction_138__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_139__2 :: ErlangFun
erlps__yyaction_139__2 [tokenchars_0, tokenline_1] =
  let    tup_el_6 = erlps__parse_int__1 [tokenchars_0]
  in let
    tup_el_3 = ErlangTuple [ErlangAtom "int", tokenline_1, tup_el_6]
  in ErlangTuple [ErlangAtom "token", tup_el_3]
erlps__yyaction_139__2 [arg_8, arg_9] = EXC.function_clause unit
erlps__yyaction_139__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_140__2 :: ErlangFun
erlps__yyaction_140__2 [tokenchars_0, tokenline_1] =
  let    tup_el_6 = erlps__parse_hash__1 [tokenchars_0]
  in let
    tup_el_3 = ErlangTuple [ErlangAtom "hash", tokenline_1, tup_el_6]
  in ErlangTuple [ErlangAtom "token", tup_el_3]
erlps__yyaction_140__2 [arg_8, arg_9] = EXC.function_clause unit
erlps__yyaction_140__2 args =
  EXC.badarity (ErlangFun 2 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_141__1 :: ErlangFun
erlps__yyaction_141__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom ",", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_141__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_141__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_142__1 :: ErlangFun
erlps__yyaction_142__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom ".", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_142__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_142__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_143__1 :: ErlangFun
erlps__yyaction_143__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom "(", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_143__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_143__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_144__1 :: ErlangFun
erlps__yyaction_144__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom ")", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_144__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_144__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_145__1 :: ErlangFun
erlps__yyaction_145__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom "[", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_145__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_145__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_146__1 :: ErlangFun
erlps__yyaction_146__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom "]", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_146__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_146__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_147__1 :: ErlangFun
erlps__yyaction_147__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom "{", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_147__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_147__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_148__1 :: ErlangFun
erlps__yyaction_148__1 [tokenline_0] =
  let tup_el_2 = ErlangTuple [ErlangAtom "}", tokenline_0]
  in ErlangTuple [ErlangAtom "token", tup_el_2]
erlps__yyaction_148__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_148__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_149__0 :: ErlangFun
erlps__yyaction_149__0 [] = ErlangAtom "skip_token"
erlps__yyaction_149__0 args =
  EXC.badarity (ErlangFun 0 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_150__0 :: ErlangFun
erlps__yyaction_150__0 [] = ErlangAtom "skip_token"
erlps__yyaction_150__0 args =
  EXC.badarity (ErlangFun 0 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__yyaction_151__1 :: ErlangFun
erlps__yyaction_151__1 [tokenchars_0] =
  let    lop_3 = toErl "Unexpected token: "
  in let tup_el_2 = BIF.erlang__op_append [lop_3, tokenchars_0]
  in ErlangTuple [ErlangAtom "error", tup_el_2]
erlps__yyaction_151__1 [arg_5] = EXC.function_clause unit
erlps__yyaction_151__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args