module Aeb.Data.Test(erlps__test__0,
                     erlps__format_integer_test__0) where
{-
This file has been autogenerated
DO NOT EDIT - Your changes WILL be overwritten
Use this code at your own risk - the authors are just a mischievous raccoon and a haskell devote
Erlscripten v0.2.0
-}

import Prelude
import Data.BigInt as DBI
import Data.Array as DA
import Data.Maybe as DM
import Data.Map as Map
import Data.Tuple as DT
import Erlang.Builtins as BIF
import Erlang.Binary as BIN
import Erlang.Helpers
import Erlang.Exception as EXC
import Erlang.Type
import Partial.Unsafe (unsafePartial)


erlps__format_integer_test__0 :: ErlangFun
erlps__format_integer_test__0 [] =
  let    arg_1 = toErl 0
  in let
    match_final_0_2 =
      BIF.do_remote_fun_call "Aeb.Fate.Data" "erlps__format__1" [arg_1]
  in
    case match_final_0_2 of
      (ErlangCons (ErlangInt num_3) (ErlangEmptyList)) | ((ErlangInt
                                                             num_3) ==
                                                            (toErl 48)) ->
        match_final_0_2
      _ -> EXC.badmatch match_final_0_2
erlps__format_integer_test__0 args =
  EXC.badarity (ErlangFun 0 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__test__0 :: ErlangFun
erlps__test__0 [] =
  BIF.do_remote_fun_call "Eunit" "erlps__test__1"
    [ErlangAtom "aeb_data_test"]
erlps__test__0 args =
  EXC.badarity (ErlangFun 0 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args